// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.6
// 	protoc        (unknown)
// source: ec1/v1poc1/agent.proto

package v1poc1

import (
	_ "github.com/walteh/ec1/gen/proto/golang/ec1/validate"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// StartVMRequest is the request message for starting a VM
type StartVMRequest struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Name of the VM
	Name *string `protobuf:"bytes,1,opt,name=name" json:"name,omitempty"`
	// Resource allocation
	ResourcesMax  *Resources `protobuf:"bytes,2,opt,name=resources_max,json=resourcesMax" json:"resources_max,omitempty"`
	ResourcesBoot *Resources `protobuf:"bytes,3,opt,name=resources_boot,json=resourcesBoot" json:"resources_boot,omitempty"`
	// Disk image path
	DiskImagePath *string `protobuf:"bytes,4,opt,name=disk_image_path,json=diskImagePath" json:"disk_image_path,omitempty"`
	// Network configuration
	NetworkConfig *VMNetworkConfig `protobuf:"bytes,5,opt,name=network_config,json=networkConfig" json:"network_config,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *StartVMRequest) Reset() {
	*x = StartVMRequest{}
	mi := &file_ec1_v1poc1_agent_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *StartVMRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StartVMRequest) ProtoMessage() {}

func (x *StartVMRequest) ProtoReflect() protoreflect.Message {
	mi := &file_ec1_v1poc1_agent_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StartVMRequest.ProtoReflect.Descriptor instead.
func (*StartVMRequest) Descriptor() ([]byte, []int) {
	return file_ec1_v1poc1_agent_proto_rawDescGZIP(), []int{0}
}

func (x *StartVMRequest) GetName() string {
	if x != nil && x.Name != nil {
		return *x.Name
	}
	return ""
}

func (x *StartVMRequest) GetResourcesMax() *Resources {
	if x != nil {
		return x.ResourcesMax
	}
	return nil
}

func (x *StartVMRequest) GetResourcesBoot() *Resources {
	if x != nil {
		return x.ResourcesBoot
	}
	return nil
}

func (x *StartVMRequest) GetDiskImagePath() string {
	if x != nil && x.DiskImagePath != nil {
		return *x.DiskImagePath
	}
	return ""
}

func (x *StartVMRequest) GetNetworkConfig() *VMNetworkConfig {
	if x != nil {
		return x.NetworkConfig
	}
	return nil
}

// StartVMResponse is the response message after starting a VM
type StartVMResponse struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// ID of the started VM
	VmId *string `protobuf:"bytes,1,opt,name=vm_id,json=vmId" json:"vm_id,omitempty"`
	// IP address of the VM (if available)
	IpAddress *string `protobuf:"bytes,2,opt,name=ip_address,json=ipAddress" json:"ip_address,omitempty"`
	// Status of the VM
	Status *VMStatus `protobuf:"varint,3,opt,name=status,enum=ec1.v1poc1.VMStatus" json:"status,omitempty"`
	// Error message, if any
	Error         *string `protobuf:"bytes,4,opt,name=error" json:"error,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *StartVMResponse) Reset() {
	*x = StartVMResponse{}
	mi := &file_ec1_v1poc1_agent_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *StartVMResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StartVMResponse) ProtoMessage() {}

func (x *StartVMResponse) ProtoReflect() protoreflect.Message {
	mi := &file_ec1_v1poc1_agent_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StartVMResponse.ProtoReflect.Descriptor instead.
func (*StartVMResponse) Descriptor() ([]byte, []int) {
	return file_ec1_v1poc1_agent_proto_rawDescGZIP(), []int{1}
}

func (x *StartVMResponse) GetVmId() string {
	if x != nil && x.VmId != nil {
		return *x.VmId
	}
	return ""
}

func (x *StartVMResponse) GetIpAddress() string {
	if x != nil && x.IpAddress != nil {
		return *x.IpAddress
	}
	return ""
}

func (x *StartVMResponse) GetStatus() VMStatus {
	if x != nil && x.Status != nil {
		return *x.Status
	}
	return VMStatus_VM_STATUS_UNSPECIFIED
}

func (x *StartVMResponse) GetError() string {
	if x != nil && x.Error != nil {
		return *x.Error
	}
	return ""
}

// StopVMRequest is the request message for stopping a VM
type StopVMRequest struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// ID of the VM to stop
	VmId *string `protobuf:"bytes,1,opt,name=vm_id,json=vmId" json:"vm_id,omitempty"`
	// Force stop the VM without graceful shutdown
	Force         *bool `protobuf:"varint,2,opt,name=force" json:"force,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *StopVMRequest) Reset() {
	*x = StopVMRequest{}
	mi := &file_ec1_v1poc1_agent_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *StopVMRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StopVMRequest) ProtoMessage() {}

func (x *StopVMRequest) ProtoReflect() protoreflect.Message {
	mi := &file_ec1_v1poc1_agent_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StopVMRequest.ProtoReflect.Descriptor instead.
func (*StopVMRequest) Descriptor() ([]byte, []int) {
	return file_ec1_v1poc1_agent_proto_rawDescGZIP(), []int{2}
}

func (x *StopVMRequest) GetVmId() string {
	if x != nil && x.VmId != nil {
		return *x.VmId
	}
	return ""
}

func (x *StopVMRequest) GetForce() bool {
	if x != nil && x.Force != nil {
		return *x.Force
	}
	return false
}

// StopVMResponse is the response message after stopping a VM
type StopVMResponse struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Success status
	Success *bool `protobuf:"varint,1,opt,name=success" json:"success,omitempty"`
	// Error message, if any
	Error         *string `protobuf:"bytes,2,opt,name=error" json:"error,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *StopVMResponse) Reset() {
	*x = StopVMResponse{}
	mi := &file_ec1_v1poc1_agent_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *StopVMResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StopVMResponse) ProtoMessage() {}

func (x *StopVMResponse) ProtoReflect() protoreflect.Message {
	mi := &file_ec1_v1poc1_agent_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StopVMResponse.ProtoReflect.Descriptor instead.
func (*StopVMResponse) Descriptor() ([]byte, []int) {
	return file_ec1_v1poc1_agent_proto_rawDescGZIP(), []int{3}
}

func (x *StopVMResponse) GetSuccess() bool {
	if x != nil && x.Success != nil {
		return *x.Success
	}
	return false
}

func (x *StopVMResponse) GetError() string {
	if x != nil && x.Error != nil {
		return *x.Error
	}
	return ""
}

// GetVMStatusRequest is the request message for getting VM status
type GetVMStatusRequest struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// ID of the VM to get status for
	VmId          *string `protobuf:"bytes,1,opt,name=vm_id,json=vmId" json:"vm_id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetVMStatusRequest) Reset() {
	*x = GetVMStatusRequest{}
	mi := &file_ec1_v1poc1_agent_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetVMStatusRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetVMStatusRequest) ProtoMessage() {}

func (x *GetVMStatusRequest) ProtoReflect() protoreflect.Message {
	mi := &file_ec1_v1poc1_agent_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetVMStatusRequest.ProtoReflect.Descriptor instead.
func (*GetVMStatusRequest) Descriptor() ([]byte, []int) {
	return file_ec1_v1poc1_agent_proto_rawDescGZIP(), []int{4}
}

func (x *GetVMStatusRequest) GetVmId() string {
	if x != nil && x.VmId != nil {
		return *x.VmId
	}
	return ""
}

// GetVMStatusResponse is the response message with VM status
type GetVMStatusResponse struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Status of the VM
	Status *VMStatus `protobuf:"varint,1,opt,name=status,enum=ec1.v1poc1.VMStatus" json:"status,omitempty"`
	// IP address of the VM (if available)
	IpAddress *string `protobuf:"bytes,2,opt,name=ip_address,json=ipAddress" json:"ip_address,omitempty"`
	// Error message, if any
	Error         *string `protobuf:"bytes,3,opt,name=error" json:"error,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetVMStatusResponse) Reset() {
	*x = GetVMStatusResponse{}
	mi := &file_ec1_v1poc1_agent_proto_msgTypes[5]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetVMStatusResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetVMStatusResponse) ProtoMessage() {}

func (x *GetVMStatusResponse) ProtoReflect() protoreflect.Message {
	mi := &file_ec1_v1poc1_agent_proto_msgTypes[5]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetVMStatusResponse.ProtoReflect.Descriptor instead.
func (*GetVMStatusResponse) Descriptor() ([]byte, []int) {
	return file_ec1_v1poc1_agent_proto_rawDescGZIP(), []int{5}
}

func (x *GetVMStatusResponse) GetStatus() VMStatus {
	if x != nil && x.Status != nil {
		return *x.Status
	}
	return VMStatus_VM_STATUS_UNSPECIFIED
}

func (x *GetVMStatusResponse) GetIpAddress() string {
	if x != nil && x.IpAddress != nil {
		return *x.IpAddress
	}
	return ""
}

func (x *GetVMStatusResponse) GetError() string {
	if x != nil && x.Error != nil {
		return *x.Error
	}
	return ""
}

// VMNetworkConfig defines networking options for a VM
type VMNetworkConfig struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Network type
	NetworkType *NetworkType `protobuf:"varint,1,opt,name=network_type,json=networkType,enum=ec1.v1poc1.NetworkType" json:"network_type,omitempty"`
	// Port forwarding rules
	PortForwards  []*PortForward `protobuf:"bytes,2,rep,name=port_forwards,json=portForwards" json:"port_forwards,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *VMNetworkConfig) Reset() {
	*x = VMNetworkConfig{}
	mi := &file_ec1_v1poc1_agent_proto_msgTypes[6]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *VMNetworkConfig) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*VMNetworkConfig) ProtoMessage() {}

func (x *VMNetworkConfig) ProtoReflect() protoreflect.Message {
	mi := &file_ec1_v1poc1_agent_proto_msgTypes[6]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use VMNetworkConfig.ProtoReflect.Descriptor instead.
func (*VMNetworkConfig) Descriptor() ([]byte, []int) {
	return file_ec1_v1poc1_agent_proto_rawDescGZIP(), []int{6}
}

func (x *VMNetworkConfig) GetNetworkType() NetworkType {
	if x != nil && x.NetworkType != nil {
		return *x.NetworkType
	}
	return NetworkType_NETWORK_TYPE_UNSPECIFIED
}

func (x *VMNetworkConfig) GetPortForwards() []*PortForward {
	if x != nil {
		return x.PortForwards
	}
	return nil
}

var File_ec1_v1poc1_agent_proto protoreflect.FileDescriptor

const file_ec1_v1poc1_agent_proto_rawDesc = "" +
	"\n" +
	"\x16ec1/v1poc1/agent.proto\x12\n" +
	"ec1.v1poc1\x1a\x17ec1/v1poc1/common.proto\x1a\x1cec1/v1poc1/constraints.proto\x1a\x1bec1/validate/validate.proto\"\x94\x02\n" +
	"\x0eStartVMRequest\x12\x12\n" +
	"\x04name\x18\x01 \x01(\tR\x04name\x12:\n" +
	"\rresources_max\x18\x02 \x01(\v2\x15.ec1.v1poc1.ResourcesR\fresourcesMax\x12<\n" +
	"\x0eresources_boot\x18\x03 \x01(\v2\x15.ec1.v1poc1.ResourcesR\rresourcesBoot\x120\n" +
	"\x0fdisk_image_path\x18\x04 \x01(\tB\b\xbaH\x05r\x03\x88\x01\x01R\rdiskImagePath\x12B\n" +
	"\x0enetwork_config\x18\x05 \x01(\v2\x1b.ec1.v1poc1.VMNetworkConfigR\rnetworkConfig\"\xa5\x01\n" +
	"\x0fStartVMResponse\x12&\n" +
	"\x05vm_id\x18\x01 \x01(\tB\x11\xbaH\x0er\f\U000b3bb1\x02\x06賮\xb1\x02\x01R\x04vmId\x12&\n" +
	"\n" +
	"ip_address\x18\x02 \x01(\tB\a\xbaH\x04r\x02x\x01R\tipAddress\x12,\n" +
	"\x06status\x18\x03 \x01(\x0e2\x14.ec1.v1poc1.VMStatusR\x06status\x12\x14\n" +
	"\x05error\x18\x04 \x01(\tR\x05error\":\n" +
	"\rStopVMRequest\x12\x13\n" +
	"\x05vm_id\x18\x01 \x01(\tR\x04vmId\x12\x14\n" +
	"\x05force\x18\x02 \x01(\bR\x05force\"@\n" +
	"\x0eStopVMResponse\x12\x18\n" +
	"\asuccess\x18\x01 \x01(\bR\asuccess\x12\x14\n" +
	"\x05error\x18\x02 \x01(\tR\x05error\")\n" +
	"\x12GetVMStatusRequest\x12\x13\n" +
	"\x05vm_id\x18\x01 \x01(\tR\x04vmId\"x\n" +
	"\x13GetVMStatusResponse\x12,\n" +
	"\x06status\x18\x01 \x01(\x0e2\x14.ec1.v1poc1.VMStatusR\x06status\x12\x1d\n" +
	"\n" +
	"ip_address\x18\x02 \x01(\tR\tipAddress\x12\x14\n" +
	"\x05error\x18\x03 \x01(\tR\x05error\"\x8b\x01\n" +
	"\x0fVMNetworkConfig\x12:\n" +
	"\fnetwork_type\x18\x01 \x01(\x0e2\x17.ec1.v1poc1.NetworkTypeR\vnetworkType\x12<\n" +
	"\rport_forwards\x18\x02 \x03(\v2\x17.ec1.v1poc1.PortForwardR\fportForwards2\xf2\x01\n" +
	"\fAgentService\x12G\n" +
	"\aStartVM\x12\x1a.ec1.v1poc1.StartVMRequest\x1a\x1b.ec1.v1poc1.StartVMResponse\"\x03\x90\x02\x01\x12D\n" +
	"\x06StopVM\x12\x19.ec1.v1poc1.StopVMRequest\x1a\x1a.ec1.v1poc1.StopVMResponse\"\x03\x90\x02\x01\x12S\n" +
	"\vGetVMStatus\x12\x1e.ec1.v1poc1.GetVMStatusRequest\x1a\x1f.ec1.v1poc1.GetVMStatusResponse\"\x03\x90\x02\x01B\x98\x01\n" +
	"\x0ecom.ec1.v1poc1B\n" +
	"AgentProtoP\x01Z1github.com/walteh/ec1/gen/proto/golang/ec1/v1poc1\xa2\x02\x03EVX\xaa\x02\n" +
	"Ec1.V1poc1\xca\x02\n" +
	"Ec1\\V1poc1\xe2\x02\x16Ec1\\V1poc1\\GPBMetadata\xea\x02\vEc1::V1poc1b\beditionsp\xe8\a"

var (
	file_ec1_v1poc1_agent_proto_rawDescOnce sync.Once
	file_ec1_v1poc1_agent_proto_rawDescData []byte
)

func file_ec1_v1poc1_agent_proto_rawDescGZIP() []byte {
	file_ec1_v1poc1_agent_proto_rawDescOnce.Do(func() {
		file_ec1_v1poc1_agent_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_ec1_v1poc1_agent_proto_rawDesc), len(file_ec1_v1poc1_agent_proto_rawDesc)))
	})
	return file_ec1_v1poc1_agent_proto_rawDescData
}

var file_ec1_v1poc1_agent_proto_msgTypes = make([]protoimpl.MessageInfo, 7)
var file_ec1_v1poc1_agent_proto_goTypes = []any{
	(*StartVMRequest)(nil),      // 0: ec1.v1poc1.StartVMRequest
	(*StartVMResponse)(nil),     // 1: ec1.v1poc1.StartVMResponse
	(*StopVMRequest)(nil),       // 2: ec1.v1poc1.StopVMRequest
	(*StopVMResponse)(nil),      // 3: ec1.v1poc1.StopVMResponse
	(*GetVMStatusRequest)(nil),  // 4: ec1.v1poc1.GetVMStatusRequest
	(*GetVMStatusResponse)(nil), // 5: ec1.v1poc1.GetVMStatusResponse
	(*VMNetworkConfig)(nil),     // 6: ec1.v1poc1.VMNetworkConfig
	(*Resources)(nil),           // 7: ec1.v1poc1.Resources
	(VMStatus)(0),               // 8: ec1.v1poc1.VMStatus
	(NetworkType)(0),            // 9: ec1.v1poc1.NetworkType
	(*PortForward)(nil),         // 10: ec1.v1poc1.PortForward
}
var file_ec1_v1poc1_agent_proto_depIdxs = []int32{
	7,  // 0: ec1.v1poc1.StartVMRequest.resources_max:type_name -> ec1.v1poc1.Resources
	7,  // 1: ec1.v1poc1.StartVMRequest.resources_boot:type_name -> ec1.v1poc1.Resources
	6,  // 2: ec1.v1poc1.StartVMRequest.network_config:type_name -> ec1.v1poc1.VMNetworkConfig
	8,  // 3: ec1.v1poc1.StartVMResponse.status:type_name -> ec1.v1poc1.VMStatus
	8,  // 4: ec1.v1poc1.GetVMStatusResponse.status:type_name -> ec1.v1poc1.VMStatus
	9,  // 5: ec1.v1poc1.VMNetworkConfig.network_type:type_name -> ec1.v1poc1.NetworkType
	10, // 6: ec1.v1poc1.VMNetworkConfig.port_forwards:type_name -> ec1.v1poc1.PortForward
	0,  // 7: ec1.v1poc1.AgentService.StartVM:input_type -> ec1.v1poc1.StartVMRequest
	2,  // 8: ec1.v1poc1.AgentService.StopVM:input_type -> ec1.v1poc1.StopVMRequest
	4,  // 9: ec1.v1poc1.AgentService.GetVMStatus:input_type -> ec1.v1poc1.GetVMStatusRequest
	1,  // 10: ec1.v1poc1.AgentService.StartVM:output_type -> ec1.v1poc1.StartVMResponse
	3,  // 11: ec1.v1poc1.AgentService.StopVM:output_type -> ec1.v1poc1.StopVMResponse
	5,  // 12: ec1.v1poc1.AgentService.GetVMStatus:output_type -> ec1.v1poc1.GetVMStatusResponse
	10, // [10:13] is the sub-list for method output_type
	7,  // [7:10] is the sub-list for method input_type
	7,  // [7:7] is the sub-list for extension type_name
	7,  // [7:7] is the sub-list for extension extendee
	0,  // [0:7] is the sub-list for field type_name
}

func init() { file_ec1_v1poc1_agent_proto_init() }
func file_ec1_v1poc1_agent_proto_init() {
	if File_ec1_v1poc1_agent_proto != nil {
		return
	}
	file_ec1_v1poc1_common_proto_init()
	file_ec1_v1poc1_constraints_proto_init()
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_ec1_v1poc1_agent_proto_rawDesc), len(file_ec1_v1poc1_agent_proto_rawDesc)),
			NumEnums:      0,
			NumMessages:   7,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_ec1_v1poc1_agent_proto_goTypes,
		DependencyIndexes: file_ec1_v1poc1_agent_proto_depIdxs,
		MessageInfos:      file_ec1_v1poc1_agent_proto_msgTypes,
	}.Build()
	File_ec1_v1poc1_agent_proto = out.File
	file_ec1_v1poc1_agent_proto_goTypes = nil
	file_ec1_v1poc1_agent_proto_depIdxs = nil
}
