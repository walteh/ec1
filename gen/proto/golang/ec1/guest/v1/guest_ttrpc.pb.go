// Code generated by protoc-gen-go-ttrpc. DO NOT EDIT.
// source: ec1/guest/v1/guest.proto
package guestv1

import (
	context "context"
	ttrpc "github.com/containerd/ttrpc"
)

type TTRPCAgentServiceService interface {
	ExecuteCommand(context.Context, TTRPCAgentService_ExecuteCommandServer) error
}

type TTRPCAgentService_ExecuteCommandServer interface {
	Send(*ExecuteCommandResponse) error
	Recv() (*ExecuteCommandRequest, error)
	ttrpc.StreamServer
}

type ttrpcagentserviceExecuteCommandServer struct {
	ttrpc.StreamServer
}

func (x *ttrpcagentserviceExecuteCommandServer) Send(m *ExecuteCommandResponse) error {
	return x.StreamServer.SendMsg(m)
}

func (x *ttrpcagentserviceExecuteCommandServer) Recv() (*ExecuteCommandRequest, error) {
	m := new(ExecuteCommandRequest)
	if err := x.StreamServer.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

func RegisterTTRPCAgentServiceService(srv *ttrpc.Server, svc TTRPCAgentServiceService) {
	srv.RegisterService("ec1.guest.v1.AgentService", &ttrpc.ServiceDesc{
		Streams: map[string]ttrpc.Stream{
			"ExecuteCommand": {
				Handler: func(ctx context.Context, stream ttrpc.StreamServer) (interface{}, error) {
					return nil, svc.ExecuteCommand(ctx, &ttrpcagentserviceExecuteCommandServer{stream})
				},
				StreamingClient: true,
				StreamingServer: true,
			},
		},
	})
}

type TTRPCAgentServiceClient interface {
	ExecuteCommand(context.Context) (TTRPCAgentService_ExecuteCommandClient, error)
}

type ttrpcagentserviceClient struct {
	client *ttrpc.Client
}

func NewTTRPCAgentServiceClient(client *ttrpc.Client) TTRPCAgentServiceClient {
	return &ttrpcagentserviceClient{
		client: client,
	}
}

func (c *ttrpcagentserviceClient) ExecuteCommand(ctx context.Context) (TTRPCAgentService_ExecuteCommandClient, error) {
	stream, err := c.client.NewStream(ctx, &ttrpc.StreamDesc{
		StreamingClient: true,
		StreamingServer: true,
	}, "ec1.guest.v1.AgentService", "ExecuteCommand", nil)
	if err != nil {
		return nil, err
	}
	x := &ttrpcagentserviceExecuteCommandClient{stream}
	return x, nil
}

type TTRPCAgentService_ExecuteCommandClient interface {
	Send(*ExecuteCommandRequest) error
	Recv() (*ExecuteCommandResponse, error)
	ttrpc.ClientStream
}

type ttrpcagentserviceExecuteCommandClient struct {
	ttrpc.ClientStream
}

func (x *ttrpcagentserviceExecuteCommandClient) Send(m *ExecuteCommandRequest) error {
	return x.ClientStream.SendMsg(m)
}

func (x *ttrpcagentserviceExecuteCommandClient) Recv() (*ExecuteCommandResponse, error) {
	m := new(ExecuteCommandResponse)
	if err := x.ClientStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}
