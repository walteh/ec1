// Code generated by protoc-gen-go-opaque-helpers. DO NOT EDIT.
// source: harpoon/v1/harpoon.proto

package harpoonv1

import (
	protovalidate "buf.build/go/protovalidate"
)

// ptr is a helper function to get a pointer to a value
func ptr[T any](v T) *T { return &v }

// NewTimeSyncRequest creates a new TimeSyncRequest using the builder pattern
func NewTimeSyncRequest(f func(*TimeSyncRequest_builder)) *TimeSyncRequest {
	b := &TimeSyncRequest_builder{}
	f(b)
	return b.Build()
}

// NewTimeSyncRequestE creates a new TimeSyncRequest using the builder pattern with validation
func NewTimeSyncRequestE(f func(*TimeSyncRequest_builder)) (*TimeSyncRequest, error) {
	m := NewTimeSyncRequest(f)
	if err := protovalidate.Validate(m); err != nil {
		return nil, err
	}
	return m, nil
}

// NewTimeSyncResponse creates a new TimeSyncResponse using the builder pattern
func NewTimeSyncResponse(f func(*TimeSyncResponse_builder)) *TimeSyncResponse {
	b := &TimeSyncResponse_builder{}
	f(b)
	return b.Build()
}

// NewTimeSyncResponseE creates a new TimeSyncResponse using the builder pattern with validation
func NewTimeSyncResponseE(f func(*TimeSyncResponse_builder)) (*TimeSyncResponse, error) {
	m := NewTimeSyncResponse(f)
	if err := protovalidate.Validate(m); err != nil {
		return nil, err
	}
	return m, nil
}

// NewReadinessRequest creates a new ReadinessRequest using the builder pattern
func NewReadinessRequest(f func(*ReadinessRequest_builder)) *ReadinessRequest {
	b := &ReadinessRequest_builder{}
	f(b)
	return b.Build()
}

// NewReadinessRequestE creates a new ReadinessRequest using the builder pattern with validation
func NewReadinessRequestE(f func(*ReadinessRequest_builder)) (*ReadinessRequest, error) {
	m := NewReadinessRequest(f)
	if err := protovalidate.Validate(m); err != nil {
		return nil, err
	}
	return m, nil
}

// NewReadinessResponse creates a new ReadinessResponse using the builder pattern
func NewReadinessResponse(f func(*ReadinessResponse_builder)) *ReadinessResponse {
	b := &ReadinessResponse_builder{}
	f(b)
	return b.Build()
}

// NewReadinessResponseE creates a new ReadinessResponse using the builder pattern with validation
func NewReadinessResponseE(f func(*ReadinessResponse_builder)) (*ReadinessResponse, error) {
	m := NewReadinessResponse(f)
	if err := protovalidate.Validate(m); err != nil {
		return nil, err
	}
	return m, nil
}

// NewRunSpecSignalRequest creates a new RunSpecSignalRequest using the builder pattern
func NewRunSpecSignalRequest(f func(*RunSpecSignalRequest_builder)) *RunSpecSignalRequest {
	b := &RunSpecSignalRequest_builder{}
	f(b)
	return b.Build()
}

// NewRunSpecSignalRequestE creates a new RunSpecSignalRequest using the builder pattern with validation
func NewRunSpecSignalRequestE(f func(*RunSpecSignalRequest_builder)) (*RunSpecSignalRequest, error) {
	m := NewRunSpecSignalRequest(f)
	if err := protovalidate.Validate(m); err != nil {
		return nil, err
	}
	return m, nil
}

// NewRunSpecSignalResponse creates a new RunSpecSignalResponse using the builder pattern
func NewRunSpecSignalResponse(f func(*RunSpecSignalResponse_builder)) *RunSpecSignalResponse {
	b := &RunSpecSignalResponse_builder{}
	f(b)
	return b.Build()
}

// NewRunSpecSignalResponseE creates a new RunSpecSignalResponse using the builder pattern with validation
func NewRunSpecSignalResponseE(f func(*RunSpecSignalResponse_builder)) (*RunSpecSignalResponse, error) {
	m := NewRunSpecSignalResponse(f)
	if err := protovalidate.Validate(m); err != nil {
		return nil, err
	}
	return m, nil
}

// NewRunSpecRequest creates a new RunSpecRequest using the builder pattern
func NewRunSpecRequest(f func(*RunSpecRequest_builder)) *RunSpecRequest {
	b := &RunSpecRequest_builder{}
	f(b)
	return b.Build()
}

// NewRunSpecRequestE creates a new RunSpecRequest using the builder pattern with validation
func NewRunSpecRequestE(f func(*RunSpecRequest_builder)) (*RunSpecRequest, error) {
	m := NewRunSpecRequest(f)
	if err := protovalidate.Validate(m); err != nil {
		return nil, err
	}
	return m, nil
}

// NewRunSpecResponse creates a new RunSpecResponse using the builder pattern
func NewRunSpecResponse(f func(*RunSpecResponse_builder)) *RunSpecResponse {
	b := &RunSpecResponse_builder{}
	f(b)
	return b.Build()
}

// NewRunSpecResponseE creates a new RunSpecResponse using the builder pattern with validation
func NewRunSpecResponseE(f func(*RunSpecResponse_builder)) (*RunSpecResponse, error) {
	m := NewRunSpecResponse(f)
	if err := protovalidate.Validate(m); err != nil {
		return nil, err
	}
	return m, nil
}

// NewRunCommandRequest creates a new RunCommandRequest using the builder pattern
func NewRunCommandRequest(f func(*RunCommandRequest_builder)) *RunCommandRequest {
	b := &RunCommandRequest_builder{}
	f(b)
	return b.Build()
}

// NewRunCommandRequestE creates a new RunCommandRequest using the builder pattern with validation
func NewRunCommandRequestE(f func(*RunCommandRequest_builder)) (*RunCommandRequest, error) {
	m := NewRunCommandRequest(f)
	if err := protovalidate.Validate(m); err != nil {
		return nil, err
	}
	return m, nil
}

// NewRunCommandResponse creates a new RunCommandResponse using the builder pattern
func NewRunCommandResponse(f func(*RunCommandResponse_builder)) *RunCommandResponse {
	b := &RunCommandResponse_builder{}
	f(b)
	return b.Build()
}

// NewRunCommandResponseE creates a new RunCommandResponse using the builder pattern with validation
func NewRunCommandResponseE(f func(*RunCommandResponse_builder)) (*RunCommandResponse, error) {
	m := NewRunCommandResponse(f)
	if err := protovalidate.Validate(m); err != nil {
		return nil, err
	}
	return m, nil
}
