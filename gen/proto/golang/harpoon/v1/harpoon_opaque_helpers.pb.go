// Code generated by protoc-gen-go-opaque-helpers. DO NOT EDIT.
// source: harpoon/v1/harpoon.proto

package harpoonv1

import (
	protovalidate "buf.build/go/protovalidate"
)

// ptr is a helper function to get a pointer to a value
func ptr[T any](v T) *T { return &v }

// NewBytestream creates a new Bytestream using the builder pattern
func NewBytestream(f func(*Bytestream_builder)) *Bytestream {
	b := &Bytestream_builder{}
	f(b)
	return b.Build()
}

// NewValidatedBytestream creates a new Bytestream using the builder pattern with validation
func NewValidatedBytestream(f func(*Bytestream_builder)) (*Bytestream, error) {
	m := NewBytestream(f)
	if err := protovalidate.Validate(m); err != nil {
		return nil, err
	}
	return m, nil
}

// NewExecRequest creates a new ExecRequest using the builder pattern
func NewExecRequest(f func(*ExecRequest_builder)) *ExecRequest {
	b := &ExecRequest_builder{}
	f(b)
	return b.Build()
}

// NewValidatedExecRequest creates a new ExecRequest using the builder pattern with validation
func NewValidatedExecRequest(f func(*ExecRequest_builder)) (*ExecRequest, error) {
	m := NewExecRequest(f)
	if err := protovalidate.Validate(m); err != nil {
		return nil, err
	}
	return m, nil
}

// NewExecRequest_Start creates a new ExecRequest_Start using the builder pattern
func NewExecRequest_Start(f func(*ExecRequest_Start_builder)) *ExecRequest_Start {
	b := &ExecRequest_Start_builder{}
	f(b)
	return b.Build()
}

// NewValidatedExecRequest_Start creates a new ExecRequest_Start using the builder pattern with validation
func NewValidatedExecRequest_Start(f func(*ExecRequest_Start_builder)) (*ExecRequest_Start, error) {
	m := NewExecRequest_Start(f)
	if err := protovalidate.Validate(m); err != nil {
		return nil, err
	}
	return m, nil
}

// NewExecRequest_Terminate creates a new ExecRequest_Terminate using the builder pattern
func NewExecRequest_Terminate(f func(*ExecRequest_Terminate_builder)) *ExecRequest_Terminate {
	b := &ExecRequest_Terminate_builder{}
	f(b)
	return b.Build()
}

// NewValidatedExecRequest_Terminate creates a new ExecRequest_Terminate using the builder pattern with validation
func NewValidatedExecRequest_Terminate(f func(*ExecRequest_Terminate_builder)) (*ExecRequest_Terminate, error) {
	m := NewExecRequest_Terminate(f)
	if err := protovalidate.Validate(m); err != nil {
		return nil, err
	}
	return m, nil
}

// NewExecResponse creates a new ExecResponse using the builder pattern
func NewExecResponse(f func(*ExecResponse_builder)) *ExecResponse {
	b := &ExecResponse_builder{}
	f(b)
	return b.Build()
}

// NewValidatedExecResponse creates a new ExecResponse using the builder pattern with validation
func NewValidatedExecResponse(f func(*ExecResponse_builder)) (*ExecResponse, error) {
	m := NewExecResponse(f)
	if err := protovalidate.Validate(m); err != nil {
		return nil, err
	}
	return m, nil
}

// NewExecResponse_Exit creates a new ExecResponse_Exit using the builder pattern
func NewExecResponse_Exit(f func(*ExecResponse_Exit_builder)) *ExecResponse_Exit {
	b := &ExecResponse_Exit_builder{}
	f(b)
	return b.Build()
}

// NewValidatedExecResponse_Exit creates a new ExecResponse_Exit using the builder pattern with validation
func NewValidatedExecResponse_Exit(f func(*ExecResponse_Exit_builder)) (*ExecResponse_Exit, error) {
	m := NewExecResponse_Exit(f)
	if err := protovalidate.Validate(m); err != nil {
		return nil, err
	}
	return m, nil
}

// NewExecResponse_Error creates a new ExecResponse_Error using the builder pattern
func NewExecResponse_Error(f func(*ExecResponse_Error_builder)) *ExecResponse_Error {
	b := &ExecResponse_Error_builder{}
	f(b)
	return b.Build()
}

// NewValidatedExecResponse_Error creates a new ExecResponse_Error using the builder pattern with validation
func NewValidatedExecResponse_Error(f func(*ExecResponse_Error_builder)) (*ExecResponse_Error, error) {
	m := NewExecResponse_Error(f)
	if err := protovalidate.Validate(m); err != nil {
		return nil, err
	}
	return m, nil
}
