// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.6
// 	protoc        (unknown)
// source: harpoon/v1/harpoon.proto

package harpoonv1

import (
	_ "buf.build/gen/go/bufbuild/protovalidate/protocolbuffers/go/buf/validate"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	_ "google.golang.org/protobuf/types/gofeaturespb"
	reflect "reflect"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type Bytestream struct {
	state                  protoimpl.MessageState `protogen:"opaque.v1"`
	xxx_hidden_Data        []byte                 `protobuf:"bytes,1,opt,name=data"`
	xxx_hidden_Done        bool                   `protobuf:"varint,2,opt,name=done"`
	XXX_raceDetectHookData protoimpl.RaceDetectHookData
	XXX_presence           [1]uint32
	unknownFields          protoimpl.UnknownFields
	sizeCache              protoimpl.SizeCache
}

func (x *Bytestream) Reset() {
	*x = Bytestream{}
	mi := &file_harpoon_v1_harpoon_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Bytestream) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Bytestream) ProtoMessage() {}

func (x *Bytestream) ProtoReflect() protoreflect.Message {
	mi := &file_harpoon_v1_harpoon_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

func (x *Bytestream) GetData() []byte {
	if x != nil {
		return x.xxx_hidden_Data
	}
	return nil
}

func (x *Bytestream) GetDone() bool {
	if x != nil {
		return x.xxx_hidden_Done
	}
	return false
}

func (x *Bytestream) SetData(v []byte) {
	if v == nil {
		v = []byte{}
	}
	x.xxx_hidden_Data = v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 0, 2)
}

func (x *Bytestream) SetDone(v bool) {
	x.xxx_hidden_Done = v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 1, 2)
}

func (x *Bytestream) HasData() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 0)
}

func (x *Bytestream) HasDone() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 1)
}

func (x *Bytestream) ClearData() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 0)
	x.xxx_hidden_Data = nil
}

func (x *Bytestream) ClearDone() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 1)
	x.xxx_hidden_Done = false
}

type Bytestream_builder struct {
	_ [0]func() // Prevents comparability and use of unkeyed literals for the builder.

	// the data to send
	Data []byte
	Done *bool
}

func (b0 Bytestream_builder) Build() *Bytestream {
	m0 := &Bytestream{}
	b, x := &b0, m0
	_, _ = b, x
	if b.Data != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 0, 2)
		x.xxx_hidden_Data = b.Data
	}
	if b.Done != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 1, 2)
		x.xxx_hidden_Done = *b.Done
	}
	return m0
}

type ExecRequest struct {
	state              protoimpl.MessageState `protogen:"opaque.v1"`
	xxx_hidden_Request isExecRequest_Request  `protobuf_oneof:"request"`
	unknownFields      protoimpl.UnknownFields
	sizeCache          protoimpl.SizeCache
}

func (x *ExecRequest) Reset() {
	*x = ExecRequest{}
	mi := &file_harpoon_v1_harpoon_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ExecRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ExecRequest) ProtoMessage() {}

func (x *ExecRequest) ProtoReflect() protoreflect.Message {
	mi := &file_harpoon_v1_harpoon_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

func (x *ExecRequest) GetStart() *ExecRequest_Start {
	if x != nil {
		if x, ok := x.xxx_hidden_Request.(*execRequest_Start_); ok {
			return x.Start
		}
	}
	return nil
}

func (x *ExecRequest) GetStdin() *Bytestream {
	if x != nil {
		if x, ok := x.xxx_hidden_Request.(*execRequest_Stdin); ok {
			return x.Stdin
		}
	}
	return nil
}

func (x *ExecRequest) GetTerminate() *ExecRequest_Terminate {
	if x != nil {
		if x, ok := x.xxx_hidden_Request.(*execRequest_Terminate_); ok {
			return x.Terminate
		}
	}
	return nil
}

func (x *ExecRequest) SetStart(v *ExecRequest_Start) {
	if v == nil {
		x.xxx_hidden_Request = nil
		return
	}
	x.xxx_hidden_Request = &execRequest_Start_{v}
}

func (x *ExecRequest) SetStdin(v *Bytestream) {
	if v == nil {
		x.xxx_hidden_Request = nil
		return
	}
	x.xxx_hidden_Request = &execRequest_Stdin{v}
}

func (x *ExecRequest) SetTerminate(v *ExecRequest_Terminate) {
	if v == nil {
		x.xxx_hidden_Request = nil
		return
	}
	x.xxx_hidden_Request = &execRequest_Terminate_{v}
}

func (x *ExecRequest) HasRequest() bool {
	if x == nil {
		return false
	}
	return x.xxx_hidden_Request != nil
}

func (x *ExecRequest) HasStart() bool {
	if x == nil {
		return false
	}
	_, ok := x.xxx_hidden_Request.(*execRequest_Start_)
	return ok
}

func (x *ExecRequest) HasStdin() bool {
	if x == nil {
		return false
	}
	_, ok := x.xxx_hidden_Request.(*execRequest_Stdin)
	return ok
}

func (x *ExecRequest) HasTerminate() bool {
	if x == nil {
		return false
	}
	_, ok := x.xxx_hidden_Request.(*execRequest_Terminate_)
	return ok
}

func (x *ExecRequest) ClearRequest() {
	x.xxx_hidden_Request = nil
}

func (x *ExecRequest) ClearStart() {
	if _, ok := x.xxx_hidden_Request.(*execRequest_Start_); ok {
		x.xxx_hidden_Request = nil
	}
}

func (x *ExecRequest) ClearStdin() {
	if _, ok := x.xxx_hidden_Request.(*execRequest_Stdin); ok {
		x.xxx_hidden_Request = nil
	}
}

func (x *ExecRequest) ClearTerminate() {
	if _, ok := x.xxx_hidden_Request.(*execRequest_Terminate_); ok {
		x.xxx_hidden_Request = nil
	}
}

const ExecRequest_Request_not_set_case case_ExecRequest_Request = 0
const ExecRequest_Start_case case_ExecRequest_Request = 1
const ExecRequest_Stdin_case case_ExecRequest_Request = 2
const ExecRequest_Terminate_case case_ExecRequest_Request = 3

func (x *ExecRequest) WhichRequest() case_ExecRequest_Request {
	if x == nil {
		return ExecRequest_Request_not_set_case
	}
	switch x.xxx_hidden_Request.(type) {
	case *execRequest_Start_:
		return ExecRequest_Start_case
	case *execRequest_Stdin:
		return ExecRequest_Stdin_case
	case *execRequest_Terminate_:
		return ExecRequest_Terminate_case
	default:
		return ExecRequest_Request_not_set_case
	}
}

type ExecRequest_builder struct {
	_ [0]func() // Prevents comparability and use of unkeyed literals for the builder.

	// Fields of oneof xxx_hidden_Request:
	// the start request
	Start     *ExecRequest_Start
	Stdin     *Bytestream
	Terminate *ExecRequest_Terminate
	// -- end of xxx_hidden_Request
}

func (b0 ExecRequest_builder) Build() *ExecRequest {
	m0 := &ExecRequest{}
	b, x := &b0, m0
	_, _ = b, x
	if b.Start != nil {
		x.xxx_hidden_Request = &execRequest_Start_{b.Start}
	}
	if b.Stdin != nil {
		x.xxx_hidden_Request = &execRequest_Stdin{b.Stdin}
	}
	if b.Terminate != nil {
		x.xxx_hidden_Request = &execRequest_Terminate_{b.Terminate}
	}
	return m0
}

type case_ExecRequest_Request protoreflect.FieldNumber

func (x case_ExecRequest_Request) String() string {
	md := file_harpoon_v1_harpoon_proto_msgTypes[1].Descriptor()
	if x == 0 {
		return "not set"
	}
	return protoimpl.X.MessageFieldStringOf(md, protoreflect.FieldNumber(x))
}

type isExecRequest_Request interface {
	isExecRequest_Request()
}

type execRequest_Start_ struct {
	// the start request
	Start *ExecRequest_Start `protobuf:"bytes,1,opt,name=start,oneof"`
}

type execRequest_Stdin struct {
	Stdin *Bytestream `protobuf:"bytes,2,opt,name=stdin,oneof"`
}

type execRequest_Terminate_ struct {
	Terminate *ExecRequest_Terminate `protobuf:"bytes,3,opt,name=terminate,oneof"`
}

func (*execRequest_Start_) isExecRequest_Request() {}

func (*execRequest_Stdin) isExecRequest_Request() {}

func (*execRequest_Terminate_) isExecRequest_Request() {}

type ExecResponse struct {
	state               protoimpl.MessageState  `protogen:"opaque.v1"`
	xxx_hidden_Response isExecResponse_Response `protobuf_oneof:"response"`
	unknownFields       protoimpl.UnknownFields
	sizeCache           protoimpl.SizeCache
}

func (x *ExecResponse) Reset() {
	*x = ExecResponse{}
	mi := &file_harpoon_v1_harpoon_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ExecResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ExecResponse) ProtoMessage() {}

func (x *ExecResponse) ProtoReflect() protoreflect.Message {
	mi := &file_harpoon_v1_harpoon_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

func (x *ExecResponse) GetStdout() *Bytestream {
	if x != nil {
		if x, ok := x.xxx_hidden_Response.(*execResponse_Stdout); ok {
			return x.Stdout
		}
	}
	return nil
}

func (x *ExecResponse) GetStderr() *Bytestream {
	if x != nil {
		if x, ok := x.xxx_hidden_Response.(*execResponse_Stderr); ok {
			return x.Stderr
		}
	}
	return nil
}

func (x *ExecResponse) GetExit() *ExecResponse_Exit {
	if x != nil {
		if x, ok := x.xxx_hidden_Response.(*execResponse_Exit_); ok {
			return x.Exit
		}
	}
	return nil
}

func (x *ExecResponse) GetError() *ExecResponse_Error {
	if x != nil {
		if x, ok := x.xxx_hidden_Response.(*execResponse_Error_); ok {
			return x.Error
		}
	}
	return nil
}

func (x *ExecResponse) SetStdout(v *Bytestream) {
	if v == nil {
		x.xxx_hidden_Response = nil
		return
	}
	x.xxx_hidden_Response = &execResponse_Stdout{v}
}

func (x *ExecResponse) SetStderr(v *Bytestream) {
	if v == nil {
		x.xxx_hidden_Response = nil
		return
	}
	x.xxx_hidden_Response = &execResponse_Stderr{v}
}

func (x *ExecResponse) SetExit(v *ExecResponse_Exit) {
	if v == nil {
		x.xxx_hidden_Response = nil
		return
	}
	x.xxx_hidden_Response = &execResponse_Exit_{v}
}

func (x *ExecResponse) SetError(v *ExecResponse_Error) {
	if v == nil {
		x.xxx_hidden_Response = nil
		return
	}
	x.xxx_hidden_Response = &execResponse_Error_{v}
}

func (x *ExecResponse) HasResponse() bool {
	if x == nil {
		return false
	}
	return x.xxx_hidden_Response != nil
}

func (x *ExecResponse) HasStdout() bool {
	if x == nil {
		return false
	}
	_, ok := x.xxx_hidden_Response.(*execResponse_Stdout)
	return ok
}

func (x *ExecResponse) HasStderr() bool {
	if x == nil {
		return false
	}
	_, ok := x.xxx_hidden_Response.(*execResponse_Stderr)
	return ok
}

func (x *ExecResponse) HasExit() bool {
	if x == nil {
		return false
	}
	_, ok := x.xxx_hidden_Response.(*execResponse_Exit_)
	return ok
}

func (x *ExecResponse) HasError() bool {
	if x == nil {
		return false
	}
	_, ok := x.xxx_hidden_Response.(*execResponse_Error_)
	return ok
}

func (x *ExecResponse) ClearResponse() {
	x.xxx_hidden_Response = nil
}

func (x *ExecResponse) ClearStdout() {
	if _, ok := x.xxx_hidden_Response.(*execResponse_Stdout); ok {
		x.xxx_hidden_Response = nil
	}
}

func (x *ExecResponse) ClearStderr() {
	if _, ok := x.xxx_hidden_Response.(*execResponse_Stderr); ok {
		x.xxx_hidden_Response = nil
	}
}

func (x *ExecResponse) ClearExit() {
	if _, ok := x.xxx_hidden_Response.(*execResponse_Exit_); ok {
		x.xxx_hidden_Response = nil
	}
}

func (x *ExecResponse) ClearError() {
	if _, ok := x.xxx_hidden_Response.(*execResponse_Error_); ok {
		x.xxx_hidden_Response = nil
	}
}

const ExecResponse_Response_not_set_case case_ExecResponse_Response = 0
const ExecResponse_Stdout_case case_ExecResponse_Response = 1
const ExecResponse_Stderr_case case_ExecResponse_Response = 2
const ExecResponse_Exit_case case_ExecResponse_Response = 3
const ExecResponse_Error_case case_ExecResponse_Response = 4

func (x *ExecResponse) WhichResponse() case_ExecResponse_Response {
	if x == nil {
		return ExecResponse_Response_not_set_case
	}
	switch x.xxx_hidden_Response.(type) {
	case *execResponse_Stdout:
		return ExecResponse_Stdout_case
	case *execResponse_Stderr:
		return ExecResponse_Stderr_case
	case *execResponse_Exit_:
		return ExecResponse_Exit_case
	case *execResponse_Error_:
		return ExecResponse_Error_case
	default:
		return ExecResponse_Response_not_set_case
	}
}

type ExecResponse_builder struct {
	_ [0]func() // Prevents comparability and use of unkeyed literals for the builder.

	// Fields of oneof xxx_hidden_Response:
	Stdout *Bytestream
	Stderr *Bytestream
	Exit   *ExecResponse_Exit
	Error  *ExecResponse_Error
	// -- end of xxx_hidden_Response
}

func (b0 ExecResponse_builder) Build() *ExecResponse {
	m0 := &ExecResponse{}
	b, x := &b0, m0
	_, _ = b, x
	if b.Stdout != nil {
		x.xxx_hidden_Response = &execResponse_Stdout{b.Stdout}
	}
	if b.Stderr != nil {
		x.xxx_hidden_Response = &execResponse_Stderr{b.Stderr}
	}
	if b.Exit != nil {
		x.xxx_hidden_Response = &execResponse_Exit_{b.Exit}
	}
	if b.Error != nil {
		x.xxx_hidden_Response = &execResponse_Error_{b.Error}
	}
	return m0
}

type case_ExecResponse_Response protoreflect.FieldNumber

func (x case_ExecResponse_Response) String() string {
	md := file_harpoon_v1_harpoon_proto_msgTypes[2].Descriptor()
	if x == 0 {
		return "not set"
	}
	return protoimpl.X.MessageFieldStringOf(md, protoreflect.FieldNumber(x))
}

type isExecResponse_Response interface {
	isExecResponse_Response()
}

type execResponse_Stdout struct {
	Stdout *Bytestream `protobuf:"bytes,1,opt,name=stdout,oneof"`
}

type execResponse_Stderr struct {
	Stderr *Bytestream `protobuf:"bytes,2,opt,name=stderr,oneof"`
}

type execResponse_Exit_ struct {
	Exit *ExecResponse_Exit `protobuf:"bytes,3,opt,name=exit,oneof"`
}

type execResponse_Error_ struct {
	Error *ExecResponse_Error `protobuf:"bytes,4,opt,name=error,oneof"`
}

func (*execResponse_Stdout) isExecResponse_Response() {}

func (*execResponse_Stderr) isExecResponse_Response() {}

func (*execResponse_Exit_) isExecResponse_Response() {}

func (*execResponse_Error_) isExecResponse_Response() {}

type TimeSyncRequest struct {
	state                  protoimpl.MessageState `protogen:"opaque.v1"`
	xxx_hidden_UnixTimeNs  uint64                 `protobuf:"varint,1,opt,name=unix_time_ns,json=unixTimeNs"`
	xxx_hidden_Timezone    *string                `protobuf:"bytes,2,opt,name=timezone"`
	XXX_raceDetectHookData protoimpl.RaceDetectHookData
	XXX_presence           [1]uint32
	unknownFields          protoimpl.UnknownFields
	sizeCache              protoimpl.SizeCache
}

func (x *TimeSyncRequest) Reset() {
	*x = TimeSyncRequest{}
	mi := &file_harpoon_v1_harpoon_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *TimeSyncRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TimeSyncRequest) ProtoMessage() {}

func (x *TimeSyncRequest) ProtoReflect() protoreflect.Message {
	mi := &file_harpoon_v1_harpoon_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

func (x *TimeSyncRequest) GetUnixTimeNs() uint64 {
	if x != nil {
		return x.xxx_hidden_UnixTimeNs
	}
	return 0
}

func (x *TimeSyncRequest) GetTimezone() string {
	if x != nil {
		if x.xxx_hidden_Timezone != nil {
			return *x.xxx_hidden_Timezone
		}
		return ""
	}
	return ""
}

func (x *TimeSyncRequest) SetUnixTimeNs(v uint64) {
	x.xxx_hidden_UnixTimeNs = v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 0, 2)
}

func (x *TimeSyncRequest) SetTimezone(v string) {
	x.xxx_hidden_Timezone = &v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 1, 2)
}

func (x *TimeSyncRequest) HasUnixTimeNs() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 0)
}

func (x *TimeSyncRequest) HasTimezone() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 1)
}

func (x *TimeSyncRequest) ClearUnixTimeNs() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 0)
	x.xxx_hidden_UnixTimeNs = 0
}

func (x *TimeSyncRequest) ClearTimezone() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 1)
	x.xxx_hidden_Timezone = nil
}

type TimeSyncRequest_builder struct {
	_ [0]func() // Prevents comparability and use of unkeyed literals for the builder.

	UnixTimeNs *uint64
	Timezone   *string
}

func (b0 TimeSyncRequest_builder) Build() *TimeSyncRequest {
	m0 := &TimeSyncRequest{}
	b, x := &b0, m0
	_, _ = b, x
	if b.UnixTimeNs != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 0, 2)
		x.xxx_hidden_UnixTimeNs = *b.UnixTimeNs
	}
	if b.Timezone != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 1, 2)
		x.xxx_hidden_Timezone = b.Timezone
	}
	return m0
}

type TimeSyncResponse struct {
	state                     protoimpl.MessageState `protogen:"opaque.v1"`
	xxx_hidden_PreviousTimeNs uint64                 `protobuf:"varint,1,opt,name=previous_time_ns,json=previousTimeNs"`
	XXX_raceDetectHookData    protoimpl.RaceDetectHookData
	XXX_presence              [1]uint32
	unknownFields             protoimpl.UnknownFields
	sizeCache                 protoimpl.SizeCache
}

func (x *TimeSyncResponse) Reset() {
	*x = TimeSyncResponse{}
	mi := &file_harpoon_v1_harpoon_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *TimeSyncResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TimeSyncResponse) ProtoMessage() {}

func (x *TimeSyncResponse) ProtoReflect() protoreflect.Message {
	mi := &file_harpoon_v1_harpoon_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

func (x *TimeSyncResponse) GetPreviousTimeNs() uint64 {
	if x != nil {
		return x.xxx_hidden_PreviousTimeNs
	}
	return 0
}

func (x *TimeSyncResponse) SetPreviousTimeNs(v uint64) {
	x.xxx_hidden_PreviousTimeNs = v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 0, 1)
}

func (x *TimeSyncResponse) HasPreviousTimeNs() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 0)
}

func (x *TimeSyncResponse) ClearPreviousTimeNs() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 0)
	x.xxx_hidden_PreviousTimeNs = 0
}

type TimeSyncResponse_builder struct {
	_ [0]func() // Prevents comparability and use of unkeyed literals for the builder.

	PreviousTimeNs *uint64
}

func (b0 TimeSyncResponse_builder) Build() *TimeSyncResponse {
	m0 := &TimeSyncResponse{}
	b, x := &b0, m0
	_, _ = b, x
	if b.PreviousTimeNs != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 0, 1)
		x.xxx_hidden_PreviousTimeNs = *b.PreviousTimeNs
	}
	return m0
}

type ExecRequest_Start struct {
	state                  protoimpl.MessageState `protogen:"opaque.v1"`
	xxx_hidden_Argc        *string                `protobuf:"bytes,1,opt,name=argc"`
	xxx_hidden_Argv        []string               `protobuf:"bytes,2,rep,name=argv"`
	xxx_hidden_EnvVars     map[string]string      `protobuf:"bytes,3,rep,name=env_vars,json=envVars" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
	xxx_hidden_Stdin       bool                   `protobuf:"varint,4,opt,name=stdin"`
	XXX_raceDetectHookData protoimpl.RaceDetectHookData
	XXX_presence           [1]uint32
	unknownFields          protoimpl.UnknownFields
	sizeCache              protoimpl.SizeCache
}

func (x *ExecRequest_Start) Reset() {
	*x = ExecRequest_Start{}
	mi := &file_harpoon_v1_harpoon_proto_msgTypes[5]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ExecRequest_Start) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ExecRequest_Start) ProtoMessage() {}

func (x *ExecRequest_Start) ProtoReflect() protoreflect.Message {
	mi := &file_harpoon_v1_harpoon_proto_msgTypes[5]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

func (x *ExecRequest_Start) GetArgc() string {
	if x != nil {
		if x.xxx_hidden_Argc != nil {
			return *x.xxx_hidden_Argc
		}
		return ""
	}
	return ""
}

func (x *ExecRequest_Start) GetArgv() []string {
	if x != nil {
		return x.xxx_hidden_Argv
	}
	return nil
}

func (x *ExecRequest_Start) GetEnvVars() map[string]string {
	if x != nil {
		return x.xxx_hidden_EnvVars
	}
	return nil
}

func (x *ExecRequest_Start) GetStdin() bool {
	if x != nil {
		return x.xxx_hidden_Stdin
	}
	return false
}

func (x *ExecRequest_Start) SetArgc(v string) {
	x.xxx_hidden_Argc = &v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 0, 4)
}

func (x *ExecRequest_Start) SetArgv(v []string) {
	x.xxx_hidden_Argv = v
}

func (x *ExecRequest_Start) SetEnvVars(v map[string]string) {
	x.xxx_hidden_EnvVars = v
}

func (x *ExecRequest_Start) SetStdin(v bool) {
	x.xxx_hidden_Stdin = v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 3, 4)
}

func (x *ExecRequest_Start) HasArgc() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 0)
}

func (x *ExecRequest_Start) HasStdin() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 3)
}

func (x *ExecRequest_Start) ClearArgc() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 0)
	x.xxx_hidden_Argc = nil
}

func (x *ExecRequest_Start) ClearStdin() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 3)
	x.xxx_hidden_Stdin = false
}

type ExecRequest_Start_builder struct {
	_ [0]func() // Prevents comparability and use of unkeyed literals for the builder.

	// the executable to run
	Argc *string
	// the arguments to pass to the executable
	Argv []string
	// the environment variables to set for the executable
	EnvVars map[string]string
	// whether to read stdin from the client
	Stdin *bool
}

func (b0 ExecRequest_Start_builder) Build() *ExecRequest_Start {
	m0 := &ExecRequest_Start{}
	b, x := &b0, m0
	_, _ = b, x
	if b.Argc != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 0, 4)
		x.xxx_hidden_Argc = b.Argc
	}
	x.xxx_hidden_Argv = b.Argv
	x.xxx_hidden_EnvVars = b.EnvVars
	if b.Stdin != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 3, 4)
		x.xxx_hidden_Stdin = *b.Stdin
	}
	return m0
}

type ExecRequest_Terminate struct {
	state                  protoimpl.MessageState `protogen:"opaque.v1"`
	xxx_hidden_Force       bool                   `protobuf:"varint,1,opt,name=force"`
	XXX_raceDetectHookData protoimpl.RaceDetectHookData
	XXX_presence           [1]uint32
	unknownFields          protoimpl.UnknownFields
	sizeCache              protoimpl.SizeCache
}

func (x *ExecRequest_Terminate) Reset() {
	*x = ExecRequest_Terminate{}
	mi := &file_harpoon_v1_harpoon_proto_msgTypes[6]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ExecRequest_Terminate) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ExecRequest_Terminate) ProtoMessage() {}

func (x *ExecRequest_Terminate) ProtoReflect() protoreflect.Message {
	mi := &file_harpoon_v1_harpoon_proto_msgTypes[6]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

func (x *ExecRequest_Terminate) GetForce() bool {
	if x != nil {
		return x.xxx_hidden_Force
	}
	return false
}

func (x *ExecRequest_Terminate) SetForce(v bool) {
	x.xxx_hidden_Force = v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 0, 1)
}

func (x *ExecRequest_Terminate) HasForce() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 0)
}

func (x *ExecRequest_Terminate) ClearForce() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 0)
	x.xxx_hidden_Force = false
}

type ExecRequest_Terminate_builder struct {
	_ [0]func() // Prevents comparability and use of unkeyed literals for the builder.

	// whether to force the termination
	Force *bool
}

func (b0 ExecRequest_Terminate_builder) Build() *ExecRequest_Terminate {
	m0 := &ExecRequest_Terminate{}
	b, x := &b0, m0
	_, _ = b, x
	if b.Force != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 0, 1)
		x.xxx_hidden_Force = *b.Force
	}
	return m0
}

type ExecResponse_Exit struct {
	state                  protoimpl.MessageState `protogen:"opaque.v1"`
	xxx_hidden_ExitCode    int32                  `protobuf:"varint,1,opt,name=exit_code,json=exitCode"`
	XXX_raceDetectHookData protoimpl.RaceDetectHookData
	XXX_presence           [1]uint32
	unknownFields          protoimpl.UnknownFields
	sizeCache              protoimpl.SizeCache
}

func (x *ExecResponse_Exit) Reset() {
	*x = ExecResponse_Exit{}
	mi := &file_harpoon_v1_harpoon_proto_msgTypes[8]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ExecResponse_Exit) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ExecResponse_Exit) ProtoMessage() {}

func (x *ExecResponse_Exit) ProtoReflect() protoreflect.Message {
	mi := &file_harpoon_v1_harpoon_proto_msgTypes[8]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

func (x *ExecResponse_Exit) GetExitCode() int32 {
	if x != nil {
		return x.xxx_hidden_ExitCode
	}
	return 0
}

func (x *ExecResponse_Exit) SetExitCode(v int32) {
	x.xxx_hidden_ExitCode = v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 0, 1)
}

func (x *ExecResponse_Exit) HasExitCode() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 0)
}

func (x *ExecResponse_Exit) ClearExitCode() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 0)
	x.xxx_hidden_ExitCode = 0
}

type ExecResponse_Exit_builder struct {
	_ [0]func() // Prevents comparability and use of unkeyed literals for the builder.

	ExitCode *int32
}

func (b0 ExecResponse_Exit_builder) Build() *ExecResponse_Exit {
	m0 := &ExecResponse_Exit{}
	b, x := &b0, m0
	_, _ = b, x
	if b.ExitCode != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 0, 1)
		x.xxx_hidden_ExitCode = *b.ExitCode
	}
	return m0
}

type ExecResponse_Error struct {
	state                  protoimpl.MessageState `protogen:"opaque.v1"`
	xxx_hidden_Error       *string                `protobuf:"bytes,1,opt,name=error"`
	XXX_raceDetectHookData protoimpl.RaceDetectHookData
	XXX_presence           [1]uint32
	unknownFields          protoimpl.UnknownFields
	sizeCache              protoimpl.SizeCache
}

func (x *ExecResponse_Error) Reset() {
	*x = ExecResponse_Error{}
	mi := &file_harpoon_v1_harpoon_proto_msgTypes[9]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ExecResponse_Error) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ExecResponse_Error) ProtoMessage() {}

func (x *ExecResponse_Error) ProtoReflect() protoreflect.Message {
	mi := &file_harpoon_v1_harpoon_proto_msgTypes[9]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

func (x *ExecResponse_Error) GetError() string {
	if x != nil {
		if x.xxx_hidden_Error != nil {
			return *x.xxx_hidden_Error
		}
		return ""
	}
	return ""
}

func (x *ExecResponse_Error) SetError(v string) {
	x.xxx_hidden_Error = &v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 0, 1)
}

func (x *ExecResponse_Error) HasError() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 0)
}

func (x *ExecResponse_Error) ClearError() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 0)
	x.xxx_hidden_Error = nil
}

type ExecResponse_Error_builder struct {
	_ [0]func() // Prevents comparability and use of unkeyed literals for the builder.

	Error *string
}

func (b0 ExecResponse_Error_builder) Build() *ExecResponse_Error {
	m0 := &ExecResponse_Error{}
	b, x := &b0, m0
	_, _ = b, x
	if b.Error != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 0, 1)
		x.xxx_hidden_Error = b.Error
	}
	return m0
}

var File_harpoon_v1_harpoon_proto protoreflect.FileDescriptor

const file_harpoon_v1_harpoon_proto_rawDesc = "" +
	"\n" +
	"\x18harpoon/v1/harpoon.proto\x12\n" +
	"harpoon.v1\x1a\x1bbuf/validate/validate.proto\x1a!google/protobuf/go_features.proto\"D\n" +
	"\n" +
	"Bytestream\x12\x1a\n" +
	"\x04data\x18\x01 \x01(\fB\x06\xbaH\x03\xc8\x01\x01R\x04data\x12\x1a\n" +
	"\x04done\x18\x02 \x01(\bB\x06\xbaH\x03\xc8\x01\x01R\x04done\"\xd8\x03\n" +
	"\vExecRequest\x125\n" +
	"\x05start\x18\x01 \x01(\v2\x1d.harpoon.v1.ExecRequest.StartH\x00R\x05start\x12.\n" +
	"\x05stdin\x18\x02 \x01(\v2\x16.harpoon.v1.BytestreamH\x00R\x05stdin\x12A\n" +
	"\tterminate\x18\x03 \x01(\v2!.harpoon.v1.ExecRequest.TerminateH\x00R\tterminate\x1a\xe8\x01\n" +
	"\x05Start\x12\x1a\n" +
	"\x04argc\x18\x01 \x01(\tB\x06\xbaH\x03\xc8\x01\x01R\x04argc\x12\x1a\n" +
	"\x04argv\x18\x02 \x03(\tB\x06\xbaH\x03\xc8\x01\x01R\x04argv\x12M\n" +
	"\benv_vars\x18\x03 \x03(\v2*.harpoon.v1.ExecRequest.Start.EnvVarsEntryB\x06\xbaH\x03\xc8\x01\x01R\aenvVars\x12\x1c\n" +
	"\x05stdin\x18\x04 \x01(\bB\x06\xbaH\x03\xc8\x01\x01R\x05stdin\x1a:\n" +
	"\fEnvVarsEntry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\tR\x03key\x12\x14\n" +
	"\x05value\x18\x02 \x01(\tR\x05value:\x028\x01\x1a)\n" +
	"\tTerminate\x12\x1c\n" +
	"\x05force\x18\x01 \x01(\bB\x06\xbaH\x03\xc8\x01\x01R\x05forceB\t\n" +
	"\arequest\"\xaf\x02\n" +
	"\fExecResponse\x120\n" +
	"\x06stdout\x18\x01 \x01(\v2\x16.harpoon.v1.BytestreamH\x00R\x06stdout\x120\n" +
	"\x06stderr\x18\x02 \x01(\v2\x16.harpoon.v1.BytestreamH\x00R\x06stderr\x123\n" +
	"\x04exit\x18\x03 \x01(\v2\x1d.harpoon.v1.ExecResponse.ExitH\x00R\x04exit\x126\n" +
	"\x05error\x18\x04 \x01(\v2\x1e.harpoon.v1.ExecResponse.ErrorH\x00R\x05error\x1a#\n" +
	"\x04Exit\x12\x1b\n" +
	"\texit_code\x18\x01 \x01(\x05R\bexitCode\x1a\x1d\n" +
	"\x05Error\x12\x14\n" +
	"\x05error\x18\x01 \x01(\tR\x05errorB\n" +
	"\n" +
	"\bresponse\"_\n" +
	"\x0fTimeSyncRequest\x12(\n" +
	"\funix_time_ns\x18\x01 \x01(\x04B\x06\xbaH\x03\xc8\x01\x01R\n" +
	"unixTimeNs\x12\"\n" +
	"\btimezone\x18\x02 \x01(\tB\x06\xbaH\x03\xc8\x01\x01R\btimezone\"D\n" +
	"\x10TimeSyncResponse\x120\n" +
	"\x10previous_time_ns\x18\x01 \x01(\x04B\x06\xbaH\x03\xc8\x01\x01R\x0epreviousTimeNs2\x94\x01\n" +
	"\fGuestService\x12=\n" +
	"\x04Exec\x12\x17.harpoon.v1.ExecRequest\x1a\x18.harpoon.v1.ExecResponse(\x010\x01\x12E\n" +
	"\bTimeSync\x12\x1b.harpoon.v1.TimeSyncRequest\x1a\x1c.harpoon.v1.TimeSyncResponseB\xac\x01\n" +
	"\x0ecom.harpoon.v1B\fHarpoonProtoP\x01Z;github.com/walteh/ec1/gen/proto/golang/harpoon/v1;harpoonv1\xa2\x02\x03HXX\xaa\x02\n" +
	"Harpoon.V1\xca\x02\n" +
	"Harpoon\\V1\xe2\x02\x16Harpoon\\V1\\GPBMetadata\xea\x02\vHarpoon::V1\x92\x03\x05\xd2>\x02\x10\x03b\beditionsp\xe8\a"

var file_harpoon_v1_harpoon_proto_msgTypes = make([]protoimpl.MessageInfo, 10)
var file_harpoon_v1_harpoon_proto_goTypes = []any{
	(*Bytestream)(nil),            // 0: harpoon.v1.Bytestream
	(*ExecRequest)(nil),           // 1: harpoon.v1.ExecRequest
	(*ExecResponse)(nil),          // 2: harpoon.v1.ExecResponse
	(*TimeSyncRequest)(nil),       // 3: harpoon.v1.TimeSyncRequest
	(*TimeSyncResponse)(nil),      // 4: harpoon.v1.TimeSyncResponse
	(*ExecRequest_Start)(nil),     // 5: harpoon.v1.ExecRequest.Start
	(*ExecRequest_Terminate)(nil), // 6: harpoon.v1.ExecRequest.Terminate
	nil,                           // 7: harpoon.v1.ExecRequest.Start.EnvVarsEntry
	(*ExecResponse_Exit)(nil),     // 8: harpoon.v1.ExecResponse.Exit
	(*ExecResponse_Error)(nil),    // 9: harpoon.v1.ExecResponse.Error
}
var file_harpoon_v1_harpoon_proto_depIdxs = []int32{
	5,  // 0: harpoon.v1.ExecRequest.start:type_name -> harpoon.v1.ExecRequest.Start
	0,  // 1: harpoon.v1.ExecRequest.stdin:type_name -> harpoon.v1.Bytestream
	6,  // 2: harpoon.v1.ExecRequest.terminate:type_name -> harpoon.v1.ExecRequest.Terminate
	0,  // 3: harpoon.v1.ExecResponse.stdout:type_name -> harpoon.v1.Bytestream
	0,  // 4: harpoon.v1.ExecResponse.stderr:type_name -> harpoon.v1.Bytestream
	8,  // 5: harpoon.v1.ExecResponse.exit:type_name -> harpoon.v1.ExecResponse.Exit
	9,  // 6: harpoon.v1.ExecResponse.error:type_name -> harpoon.v1.ExecResponse.Error
	7,  // 7: harpoon.v1.ExecRequest.Start.env_vars:type_name -> harpoon.v1.ExecRequest.Start.EnvVarsEntry
	1,  // 8: harpoon.v1.GuestService.Exec:input_type -> harpoon.v1.ExecRequest
	3,  // 9: harpoon.v1.GuestService.TimeSync:input_type -> harpoon.v1.TimeSyncRequest
	2,  // 10: harpoon.v1.GuestService.Exec:output_type -> harpoon.v1.ExecResponse
	4,  // 11: harpoon.v1.GuestService.TimeSync:output_type -> harpoon.v1.TimeSyncResponse
	10, // [10:12] is the sub-list for method output_type
	8,  // [8:10] is the sub-list for method input_type
	8,  // [8:8] is the sub-list for extension type_name
	8,  // [8:8] is the sub-list for extension extendee
	0,  // [0:8] is the sub-list for field type_name
}

func init() { file_harpoon_v1_harpoon_proto_init() }
func file_harpoon_v1_harpoon_proto_init() {
	if File_harpoon_v1_harpoon_proto != nil {
		return
	}
	file_harpoon_v1_harpoon_proto_msgTypes[1].OneofWrappers = []any{
		(*execRequest_Start_)(nil),
		(*execRequest_Stdin)(nil),
		(*execRequest_Terminate_)(nil),
	}
	file_harpoon_v1_harpoon_proto_msgTypes[2].OneofWrappers = []any{
		(*execResponse_Stdout)(nil),
		(*execResponse_Stderr)(nil),
		(*execResponse_Exit_)(nil),
		(*execResponse_Error_)(nil),
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_harpoon_v1_harpoon_proto_rawDesc), len(file_harpoon_v1_harpoon_proto_rawDesc)),
			NumEnums:      0,
			NumMessages:   10,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_harpoon_v1_harpoon_proto_goTypes,
		DependencyIndexes: file_harpoon_v1_harpoon_proto_depIdxs,
		MessageInfos:      file_harpoon_v1_harpoon_proto_msgTypes,
	}.Build()
	File_harpoon_v1_harpoon_proto = out.File
	file_harpoon_v1_harpoon_proto_goTypes = nil
	file_harpoon_v1_harpoon_proto_depIdxs = nil
}
