// Code generated by protoc-gen-go-ttrpc. DO NOT EDIT.
// source: harpoon/v1/harpoon.proto
package harpoonv1

import (
	context "context"
	ttrpc "github.com/containerd/ttrpc"
)

type TTRPCAgentServiceService interface {
	Exec(context.Context, TTRPCAgentService_ExecServer) error
}

type TTRPCAgentService_ExecServer interface {
	Send(*ExecResponse) error
	Recv() (*ExecRequest, error)
	ttrpc.StreamServer
}

type ttrpcagentserviceExecServer struct {
	ttrpc.StreamServer
}

func (x *ttrpcagentserviceExecServer) Send(m *ExecResponse) error {
	return x.StreamServer.SendMsg(m)
}

func (x *ttrpcagentserviceExecServer) Recv() (*ExecRequest, error) {
	m := new(ExecRequest)
	if err := x.StreamServer.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

func RegisterTTRPCAgentServiceService(srv *ttrpc.Server, svc TTRPCAgentServiceService) {
	srv.RegisterService("harpoon.v1.AgentService", &ttrpc.ServiceDesc{
		Streams: map[string]ttrpc.Stream{
			"Exec": {
				Handler: func(ctx context.Context, stream ttrpc.StreamServer) (interface{}, error) {
					return nil, svc.Exec(ctx, &ttrpcagentserviceExecServer{stream})
				},
				StreamingClient: true,
				StreamingServer: true,
			},
		},
	})
}

type TTRPCAgentServiceClient interface {
	Exec(context.Context) (TTRPCAgentService_ExecClient, error)
}

type ttrpcagentserviceClient struct {
	client *ttrpc.Client
}

func NewTTRPCAgentServiceClient(client *ttrpc.Client) TTRPCAgentServiceClient {
	return &ttrpcagentserviceClient{
		client: client,
	}
}

func (c *ttrpcagentserviceClient) Exec(ctx context.Context) (TTRPCAgentService_ExecClient, error) {
	stream, err := c.client.NewStream(ctx, &ttrpc.StreamDesc{
		StreamingClient: true,
		StreamingServer: true,
	}, "harpoon.v1.AgentService", "Exec", nil)
	if err != nil {
		return nil, err
	}
	x := &ttrpcagentserviceExecClient{stream}
	return x, nil
}

type TTRPCAgentService_ExecClient interface {
	Send(*ExecRequest) error
	Recv() (*ExecResponse, error)
	ttrpc.ClientStream
}

type ttrpcagentserviceExecClient struct {
	ttrpc.ClientStream
}

func (x *ttrpcagentserviceExecClient) Send(m *ExecRequest) error {
	return x.ClientStream.SendMsg(m)
}

func (x *ttrpcagentserviceExecClient) Recv() (*ExecResponse, error) {
	m := new(ExecResponse)
	if err := x.ClientStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}
