// Code generated by go-swagger; DO NOT EDIT.

package operations

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"net/http"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/runtime/middleware"

	"github.com/walteh/ec1/gen/firecracker-swagger-go/models"
)

// PutGuestBootSourceNoContentCode is the HTTP code returned for type PutGuestBootSourceNoContent
const PutGuestBootSourceNoContentCode int = 204

/*
PutGuestBootSourceNoContent Boot source created/updated

swagger:response putGuestBootSourceNoContent
*/
type PutGuestBootSourceNoContent struct {
}

// NewPutGuestBootSourceNoContent creates PutGuestBootSourceNoContent with default headers values
func NewPutGuestBootSourceNoContent() *PutGuestBootSourceNoContent {

	return &PutGuestBootSourceNoContent{}
}

// WriteResponse to the client
func (o *PutGuestBootSourceNoContent) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.Header().Del(runtime.HeaderContentType) //Remove Content-Type on empty responses

	rw.WriteHeader(204)
}

func (o *PutGuestBootSourceNoContent) PutGuestBootSourceResponder() {}

// PutGuestBootSourceBadRequestCode is the HTTP code returned for type PutGuestBootSourceBadRequest
const PutGuestBootSourceBadRequestCode int = 400

/*
PutGuestBootSourceBadRequest Boot source cannot be created due to bad input

swagger:response putGuestBootSourceBadRequest
*/
type PutGuestBootSourceBadRequest struct {

	/*
	  In: Body
	*/
	Payload *models.Error `json:"body,omitempty"`
}

// NewPutGuestBootSourceBadRequest creates PutGuestBootSourceBadRequest with default headers values
func NewPutGuestBootSourceBadRequest() *PutGuestBootSourceBadRequest {

	return &PutGuestBootSourceBadRequest{}
}

// WithPayload adds the payload to the put guest boot source bad request response
func (o *PutGuestBootSourceBadRequest) WithPayload(payload *models.Error) *PutGuestBootSourceBadRequest {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the put guest boot source bad request response
func (o *PutGuestBootSourceBadRequest) SetPayload(payload *models.Error) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *PutGuestBootSourceBadRequest) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(400)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

func (o *PutGuestBootSourceBadRequest) PutGuestBootSourceResponder() {}

/*
PutGuestBootSourceDefault Internal server error

swagger:response putGuestBootSourceDefault
*/
type PutGuestBootSourceDefault struct {
	_statusCode int

	/*
	  In: Body
	*/
	Payload *models.Error `json:"body,omitempty"`
}

// NewPutGuestBootSourceDefault creates PutGuestBootSourceDefault with default headers values
func NewPutGuestBootSourceDefault(code int) *PutGuestBootSourceDefault {
	if code <= 0 {
		code = 500
	}

	return &PutGuestBootSourceDefault{
		_statusCode: code,
	}
}

// WithStatusCode adds the status to the put guest boot source default response
func (o *PutGuestBootSourceDefault) WithStatusCode(code int) *PutGuestBootSourceDefault {
	o._statusCode = code
	return o
}

// SetStatusCode sets the status to the put guest boot source default response
func (o *PutGuestBootSourceDefault) SetStatusCode(code int) {
	o._statusCode = code
}

// WithPayload adds the payload to the put guest boot source default response
func (o *PutGuestBootSourceDefault) WithPayload(payload *models.Error) *PutGuestBootSourceDefault {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the put guest boot source default response
func (o *PutGuestBootSourceDefault) SetPayload(payload *models.Error) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *PutGuestBootSourceDefault) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(o._statusCode)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

func (o *PutGuestBootSourceDefault) PutGuestBootSourceResponder() {}

type PutGuestBootSourceNotImplementedResponder struct {
	middleware.Responder
}

func (*PutGuestBootSourceNotImplementedResponder) PutGuestBootSourceResponder() {}

func PutGuestBootSourceNotImplemented() PutGuestBootSourceResponder {
	return &PutGuestBootSourceNotImplementedResponder{
		middleware.NotImplemented(
			"operation authentication.PutGuestBootSource has not yet been implemented",
		),
	}
}

type PutGuestBootSourceResponder interface {
	middleware.Responder
	PutGuestBootSourceResponder()
}
