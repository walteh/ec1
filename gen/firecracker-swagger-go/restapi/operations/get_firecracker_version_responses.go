// Code generated by go-swagger; DO NOT EDIT.

package operations

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"net/http"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/runtime/middleware"

	"github.com/walteh/ec1/gen/firecracker-swagger-go/models"
)

// GetFirecrackerVersionOKCode is the HTTP code returned for type GetFirecrackerVersionOK
const GetFirecrackerVersionOKCode int = 200

/*
GetFirecrackerVersionOK OK

swagger:response getFirecrackerVersionOK
*/
type GetFirecrackerVersionOK struct {

	/*
	  In: Body
	*/
	Payload *models.FirecrackerVersion `json:"body,omitempty"`
}

// NewGetFirecrackerVersionOK creates GetFirecrackerVersionOK with default headers values
func NewGetFirecrackerVersionOK() *GetFirecrackerVersionOK {

	return &GetFirecrackerVersionOK{}
}

// WithPayload adds the payload to the get firecracker version o k response
func (o *GetFirecrackerVersionOK) WithPayload(payload *models.FirecrackerVersion) *GetFirecrackerVersionOK {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the get firecracker version o k response
func (o *GetFirecrackerVersionOK) SetPayload(payload *models.FirecrackerVersion) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *GetFirecrackerVersionOK) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(200)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

func (o *GetFirecrackerVersionOK) GetFirecrackerVersionResponder() {}

/*
GetFirecrackerVersionDefault Internal server error

swagger:response getFirecrackerVersionDefault
*/
type GetFirecrackerVersionDefault struct {
	_statusCode int

	/*
	  In: Body
	*/
	Payload *models.Error `json:"body,omitempty"`
}

// NewGetFirecrackerVersionDefault creates GetFirecrackerVersionDefault with default headers values
func NewGetFirecrackerVersionDefault(code int) *GetFirecrackerVersionDefault {
	if code <= 0 {
		code = 500
	}

	return &GetFirecrackerVersionDefault{
		_statusCode: code,
	}
}

// WithStatusCode adds the status to the get firecracker version default response
func (o *GetFirecrackerVersionDefault) WithStatusCode(code int) *GetFirecrackerVersionDefault {
	o._statusCode = code
	return o
}

// SetStatusCode sets the status to the get firecracker version default response
func (o *GetFirecrackerVersionDefault) SetStatusCode(code int) {
	o._statusCode = code
}

// WithPayload adds the payload to the get firecracker version default response
func (o *GetFirecrackerVersionDefault) WithPayload(payload *models.Error) *GetFirecrackerVersionDefault {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the get firecracker version default response
func (o *GetFirecrackerVersionDefault) SetPayload(payload *models.Error) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *GetFirecrackerVersionDefault) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(o._statusCode)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

func (o *GetFirecrackerVersionDefault) GetFirecrackerVersionResponder() {}

type GetFirecrackerVersionNotImplementedResponder struct {
	middleware.Responder
}

func (*GetFirecrackerVersionNotImplementedResponder) GetFirecrackerVersionResponder() {}

func GetFirecrackerVersionNotImplemented() GetFirecrackerVersionResponder {
	return &GetFirecrackerVersionNotImplementedResponder{
		middleware.NotImplemented(
			"operation authentication.GetFirecrackerVersion has not yet been implemented",
		),
	}
}

type GetFirecrackerVersionResponder interface {
	middleware.Responder
	GetFirecrackerVersionResponder()
}
