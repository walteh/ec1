// Code generated by go-swagger; DO NOT EDIT.

package operations

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"net/http"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/runtime/middleware"

	"github.com/walteh/ec1/gen/firecracker-swagger-go/models"
)

// CreateSyncActionNoContentCode is the HTTP code returned for type CreateSyncActionNoContent
const CreateSyncActionNoContentCode int = 204

/*
CreateSyncActionNoContent The update was successful

swagger:response createSyncActionNoContent
*/
type CreateSyncActionNoContent struct {
}

// NewCreateSyncActionNoContent creates CreateSyncActionNoContent with default headers values
func NewCreateSyncActionNoContent() *CreateSyncActionNoContent {

	return &CreateSyncActionNoContent{}
}

// WriteResponse to the client
func (o *CreateSyncActionNoContent) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.Header().Del(runtime.HeaderContentType) //Remove Content-Type on empty responses

	rw.WriteHeader(204)
}

func (o *CreateSyncActionNoContent) CreateSyncActionResponder() {}

// CreateSyncActionBadRequestCode is the HTTP code returned for type CreateSyncActionBadRequest
const CreateSyncActionBadRequestCode int = 400

/*
CreateSyncActionBadRequest The action cannot be executed due to bad input

swagger:response createSyncActionBadRequest
*/
type CreateSyncActionBadRequest struct {

	/*
	  In: Body
	*/
	Payload *models.Error `json:"body,omitempty"`
}

// NewCreateSyncActionBadRequest creates CreateSyncActionBadRequest with default headers values
func NewCreateSyncActionBadRequest() *CreateSyncActionBadRequest {

	return &CreateSyncActionBadRequest{}
}

// WithPayload adds the payload to the create sync action bad request response
func (o *CreateSyncActionBadRequest) WithPayload(payload *models.Error) *CreateSyncActionBadRequest {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the create sync action bad request response
func (o *CreateSyncActionBadRequest) SetPayload(payload *models.Error) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *CreateSyncActionBadRequest) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(400)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

func (o *CreateSyncActionBadRequest) CreateSyncActionResponder() {}

/*
CreateSyncActionDefault Internal Server Error

swagger:response createSyncActionDefault
*/
type CreateSyncActionDefault struct {
	_statusCode int

	/*
	  In: Body
	*/
	Payload *models.Error `json:"body,omitempty"`
}

// NewCreateSyncActionDefault creates CreateSyncActionDefault with default headers values
func NewCreateSyncActionDefault(code int) *CreateSyncActionDefault {
	if code <= 0 {
		code = 500
	}

	return &CreateSyncActionDefault{
		_statusCode: code,
	}
}

// WithStatusCode adds the status to the create sync action default response
func (o *CreateSyncActionDefault) WithStatusCode(code int) *CreateSyncActionDefault {
	o._statusCode = code
	return o
}

// SetStatusCode sets the status to the create sync action default response
func (o *CreateSyncActionDefault) SetStatusCode(code int) {
	o._statusCode = code
}

// WithPayload adds the payload to the create sync action default response
func (o *CreateSyncActionDefault) WithPayload(payload *models.Error) *CreateSyncActionDefault {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the create sync action default response
func (o *CreateSyncActionDefault) SetPayload(payload *models.Error) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *CreateSyncActionDefault) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(o._statusCode)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

func (o *CreateSyncActionDefault) CreateSyncActionResponder() {}

type CreateSyncActionNotImplementedResponder struct {
	middleware.Responder
}

func (*CreateSyncActionNotImplementedResponder) CreateSyncActionResponder() {}

func CreateSyncActionNotImplemented() CreateSyncActionResponder {
	return &CreateSyncActionNotImplementedResponder{
		middleware.NotImplemented(
			"operation authentication.CreateSyncAction has not yet been implemented",
		),
	}
}

type CreateSyncActionResponder interface {
	middleware.Responder
	CreateSyncActionResponder()
}
