// Code generated by go-swagger; DO NOT EDIT.

package operations

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the generate command

import (
	"net/http"

	"github.com/go-openapi/runtime/middleware"
)

// GetMmdsHandlerFunc turns a function with the right signature into a get mmds handler
type GetMmdsHandlerFunc func(GetMmdsParams) GetMmdsResponder

// Handle executing the request and returning a response
func (fn GetMmdsHandlerFunc) Handle(params GetMmdsParams) GetMmdsResponder {
	return fn(params)
}

// GetMmdsHandler interface for that can handle valid get mmds params
type GetMmdsHandler interface {
	Handle(GetMmdsParams) GetMmdsResponder
}

// NewGetMmds creates a new http.Handler for the get mmds operation
func NewGetMmds(ctx *middleware.Context, handler GetMmdsHandler) *GetMmds {
	return &GetMmds{Context: ctx, Handler: handler}
}

/*
	GetMmds swagger:route GET /mmds getMmds

Get the MMDS data store.
*/
type GetMmds struct {
	Context *middleware.Context
	Handler GetMmdsHandler
}

func (o *GetMmds) ServeHTTP(rw http.ResponseWriter, r *http.Request) {
	route, rCtx, _ := o.Context.RouteInfo(r)
	if rCtx != nil {
		*r = *rCtx
	}
	var Params = NewGetMmdsParams()
	if err := o.Context.BindValidRequest(r, route, &Params); err != nil { // bind params
		o.Context.Respond(rw, r, route.Produces, route, err)
		return
	}

	res := o.Handler.Handle(Params) // actually handle the request
	o.Context.Respond(rw, r, route.Produces, route, res)

}
