// Code generated by go-swagger; DO NOT EDIT.

package operations

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"net/http"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/runtime/middleware"

	"github.com/walteh/ec1/gen/firecracker-swagger-go/models"
)

// PutCPUConfigurationNoContentCode is the HTTP code returned for type PutCPUConfigurationNoContent
const PutCPUConfigurationNoContentCode int = 204

/*
PutCPUConfigurationNoContent CPU configuration set successfully

swagger:response putCpuConfigurationNoContent
*/
type PutCPUConfigurationNoContent struct {
}

// NewPutCPUConfigurationNoContent creates PutCPUConfigurationNoContent with default headers values
func NewPutCPUConfigurationNoContent() *PutCPUConfigurationNoContent {

	return &PutCPUConfigurationNoContent{}
}

// WriteResponse to the client
func (o *PutCPUConfigurationNoContent) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.Header().Del(runtime.HeaderContentType) //Remove Content-Type on empty responses

	rw.WriteHeader(204)
}

func (o *PutCPUConfigurationNoContent) PutCPUConfigurationResponder() {}

// PutCPUConfigurationBadRequestCode is the HTTP code returned for type PutCPUConfigurationBadRequest
const PutCPUConfigurationBadRequestCode int = 400

/*
PutCPUConfigurationBadRequest CPU configuration cannot be updated due to invalid input format

swagger:response putCpuConfigurationBadRequest
*/
type PutCPUConfigurationBadRequest struct {

	/*
	  In: Body
	*/
	Payload *models.Error `json:"body,omitempty"`
}

// NewPutCPUConfigurationBadRequest creates PutCPUConfigurationBadRequest with default headers values
func NewPutCPUConfigurationBadRequest() *PutCPUConfigurationBadRequest {

	return &PutCPUConfigurationBadRequest{}
}

// WithPayload adds the payload to the put Cpu configuration bad request response
func (o *PutCPUConfigurationBadRequest) WithPayload(payload *models.Error) *PutCPUConfigurationBadRequest {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the put Cpu configuration bad request response
func (o *PutCPUConfigurationBadRequest) SetPayload(payload *models.Error) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *PutCPUConfigurationBadRequest) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(400)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

func (o *PutCPUConfigurationBadRequest) PutCPUConfigurationResponder() {}

/*
PutCPUConfigurationDefault Internal server error

swagger:response putCpuConfigurationDefault
*/
type PutCPUConfigurationDefault struct {
	_statusCode int

	/*
	  In: Body
	*/
	Payload *models.Error `json:"body,omitempty"`
}

// NewPutCPUConfigurationDefault creates PutCPUConfigurationDefault with default headers values
func NewPutCPUConfigurationDefault(code int) *PutCPUConfigurationDefault {
	if code <= 0 {
		code = 500
	}

	return &PutCPUConfigurationDefault{
		_statusCode: code,
	}
}

// WithStatusCode adds the status to the put Cpu configuration default response
func (o *PutCPUConfigurationDefault) WithStatusCode(code int) *PutCPUConfigurationDefault {
	o._statusCode = code
	return o
}

// SetStatusCode sets the status to the put Cpu configuration default response
func (o *PutCPUConfigurationDefault) SetStatusCode(code int) {
	o._statusCode = code
}

// WithPayload adds the payload to the put Cpu configuration default response
func (o *PutCPUConfigurationDefault) WithPayload(payload *models.Error) *PutCPUConfigurationDefault {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the put Cpu configuration default response
func (o *PutCPUConfigurationDefault) SetPayload(payload *models.Error) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *PutCPUConfigurationDefault) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(o._statusCode)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

func (o *PutCPUConfigurationDefault) PutCPUConfigurationResponder() {}

type PutCPUConfigurationNotImplementedResponder struct {
	middleware.Responder
}

func (*PutCPUConfigurationNotImplementedResponder) PutCPUConfigurationResponder() {}

func PutCPUConfigurationNotImplemented() PutCPUConfigurationResponder {
	return &PutCPUConfigurationNotImplementedResponder{
		middleware.NotImplemented(
			"operation authentication.PutCPUConfiguration has not yet been implemented",
		),
	}
}

type PutCPUConfigurationResponder interface {
	middleware.Responder
	PutCPUConfigurationResponder()
}
