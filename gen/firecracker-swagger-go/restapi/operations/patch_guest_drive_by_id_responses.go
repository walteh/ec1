// Code generated by go-swagger; DO NOT EDIT.

package operations

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"net/http"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/runtime/middleware"

	"github.com/walteh/ec1/gen/firecracker-swagger-go/models"
)

// PatchGuestDriveByIDNoContentCode is the HTTP code returned for type PatchGuestDriveByIDNoContent
const PatchGuestDriveByIDNoContentCode int = 204

/*
PatchGuestDriveByIDNoContent Drive updated

swagger:response patchGuestDriveByIdNoContent
*/
type PatchGuestDriveByIDNoContent struct {
}

// NewPatchGuestDriveByIDNoContent creates PatchGuestDriveByIDNoContent with default headers values
func NewPatchGuestDriveByIDNoContent() *PatchGuestDriveByIDNoContent {

	return &PatchGuestDriveByIDNoContent{}
}

// WriteResponse to the client
func (o *PatchGuestDriveByIDNoContent) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.Header().Del(runtime.HeaderContentType) //Remove Content-Type on empty responses

	rw.WriteHeader(204)
}

func (o *PatchGuestDriveByIDNoContent) PatchGuestDriveByIDResponder() {}

// PatchGuestDriveByIDBadRequestCode is the HTTP code returned for type PatchGuestDriveByIDBadRequest
const PatchGuestDriveByIDBadRequestCode int = 400

/*
PatchGuestDriveByIDBadRequest Drive cannot be updated due to bad input

swagger:response patchGuestDriveByIdBadRequest
*/
type PatchGuestDriveByIDBadRequest struct {

	/*
	  In: Body
	*/
	Payload *models.Error `json:"body,omitempty"`
}

// NewPatchGuestDriveByIDBadRequest creates PatchGuestDriveByIDBadRequest with default headers values
func NewPatchGuestDriveByIDBadRequest() *PatchGuestDriveByIDBadRequest {

	return &PatchGuestDriveByIDBadRequest{}
}

// WithPayload adds the payload to the patch guest drive by Id bad request response
func (o *PatchGuestDriveByIDBadRequest) WithPayload(payload *models.Error) *PatchGuestDriveByIDBadRequest {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the patch guest drive by Id bad request response
func (o *PatchGuestDriveByIDBadRequest) SetPayload(payload *models.Error) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *PatchGuestDriveByIDBadRequest) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(400)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

func (o *PatchGuestDriveByIDBadRequest) PatchGuestDriveByIDResponder() {}

/*
PatchGuestDriveByIDDefault Internal server error.

swagger:response patchGuestDriveByIdDefault
*/
type PatchGuestDriveByIDDefault struct {
	_statusCode int

	/*
	  In: Body
	*/
	Payload *models.Error `json:"body,omitempty"`
}

// NewPatchGuestDriveByIDDefault creates PatchGuestDriveByIDDefault with default headers values
func NewPatchGuestDriveByIDDefault(code int) *PatchGuestDriveByIDDefault {
	if code <= 0 {
		code = 500
	}

	return &PatchGuestDriveByIDDefault{
		_statusCode: code,
	}
}

// WithStatusCode adds the status to the patch guest drive by ID default response
func (o *PatchGuestDriveByIDDefault) WithStatusCode(code int) *PatchGuestDriveByIDDefault {
	o._statusCode = code
	return o
}

// SetStatusCode sets the status to the patch guest drive by ID default response
func (o *PatchGuestDriveByIDDefault) SetStatusCode(code int) {
	o._statusCode = code
}

// WithPayload adds the payload to the patch guest drive by ID default response
func (o *PatchGuestDriveByIDDefault) WithPayload(payload *models.Error) *PatchGuestDriveByIDDefault {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the patch guest drive by ID default response
func (o *PatchGuestDriveByIDDefault) SetPayload(payload *models.Error) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *PatchGuestDriveByIDDefault) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(o._statusCode)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

func (o *PatchGuestDriveByIDDefault) PatchGuestDriveByIDResponder() {}

type PatchGuestDriveByIDNotImplementedResponder struct {
	middleware.Responder
}

func (*PatchGuestDriveByIDNotImplementedResponder) PatchGuestDriveByIDResponder() {}

func PatchGuestDriveByIDNotImplemented() PatchGuestDriveByIDResponder {
	return &PatchGuestDriveByIDNotImplementedResponder{
		middleware.NotImplemented(
			"operation authentication.PatchGuestDriveByID has not yet been implemented",
		),
	}
}

type PatchGuestDriveByIDResponder interface {
	middleware.Responder
	PatchGuestDriveByIDResponder()
}
