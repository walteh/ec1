// Code generated by go-swagger; DO NOT EDIT.

package operations

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"net/http"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/runtime/middleware"

	"github.com/walteh/ec1/gen/firecracker-swagger-go/models"
)

// PatchBalloonStatsIntervalNoContentCode is the HTTP code returned for type PatchBalloonStatsIntervalNoContent
const PatchBalloonStatsIntervalNoContentCode int = 204

/*
PatchBalloonStatsIntervalNoContent Balloon statistics interval updated

swagger:response patchBalloonStatsIntervalNoContent
*/
type PatchBalloonStatsIntervalNoContent struct {
}

// NewPatchBalloonStatsIntervalNoContent creates PatchBalloonStatsIntervalNoContent with default headers values
func NewPatchBalloonStatsIntervalNoContent() *PatchBalloonStatsIntervalNoContent {

	return &PatchBalloonStatsIntervalNoContent{}
}

// WriteResponse to the client
func (o *PatchBalloonStatsIntervalNoContent) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.Header().Del(runtime.HeaderContentType) //Remove Content-Type on empty responses

	rw.WriteHeader(204)
}

func (o *PatchBalloonStatsIntervalNoContent) PatchBalloonStatsIntervalResponder() {}

// PatchBalloonStatsIntervalBadRequestCode is the HTTP code returned for type PatchBalloonStatsIntervalBadRequest
const PatchBalloonStatsIntervalBadRequestCode int = 400

/*
PatchBalloonStatsIntervalBadRequest Balloon statistics interval cannot be updated due to bad input

swagger:response patchBalloonStatsIntervalBadRequest
*/
type PatchBalloonStatsIntervalBadRequest struct {

	/*
	  In: Body
	*/
	Payload *models.Error `json:"body,omitempty"`
}

// NewPatchBalloonStatsIntervalBadRequest creates PatchBalloonStatsIntervalBadRequest with default headers values
func NewPatchBalloonStatsIntervalBadRequest() *PatchBalloonStatsIntervalBadRequest {

	return &PatchBalloonStatsIntervalBadRequest{}
}

// WithPayload adds the payload to the patch balloon stats interval bad request response
func (o *PatchBalloonStatsIntervalBadRequest) WithPayload(payload *models.Error) *PatchBalloonStatsIntervalBadRequest {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the patch balloon stats interval bad request response
func (o *PatchBalloonStatsIntervalBadRequest) SetPayload(payload *models.Error) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *PatchBalloonStatsIntervalBadRequest) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(400)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

func (o *PatchBalloonStatsIntervalBadRequest) PatchBalloonStatsIntervalResponder() {}

/*
PatchBalloonStatsIntervalDefault Internal server error

swagger:response patchBalloonStatsIntervalDefault
*/
type PatchBalloonStatsIntervalDefault struct {
	_statusCode int

	/*
	  In: Body
	*/
	Payload *models.Error `json:"body,omitempty"`
}

// NewPatchBalloonStatsIntervalDefault creates PatchBalloonStatsIntervalDefault with default headers values
func NewPatchBalloonStatsIntervalDefault(code int) *PatchBalloonStatsIntervalDefault {
	if code <= 0 {
		code = 500
	}

	return &PatchBalloonStatsIntervalDefault{
		_statusCode: code,
	}
}

// WithStatusCode adds the status to the patch balloon stats interval default response
func (o *PatchBalloonStatsIntervalDefault) WithStatusCode(code int) *PatchBalloonStatsIntervalDefault {
	o._statusCode = code
	return o
}

// SetStatusCode sets the status to the patch balloon stats interval default response
func (o *PatchBalloonStatsIntervalDefault) SetStatusCode(code int) {
	o._statusCode = code
}

// WithPayload adds the payload to the patch balloon stats interval default response
func (o *PatchBalloonStatsIntervalDefault) WithPayload(payload *models.Error) *PatchBalloonStatsIntervalDefault {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the patch balloon stats interval default response
func (o *PatchBalloonStatsIntervalDefault) SetPayload(payload *models.Error) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *PatchBalloonStatsIntervalDefault) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(o._statusCode)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

func (o *PatchBalloonStatsIntervalDefault) PatchBalloonStatsIntervalResponder() {}

type PatchBalloonStatsIntervalNotImplementedResponder struct {
	middleware.Responder
}

func (*PatchBalloonStatsIntervalNotImplementedResponder) PatchBalloonStatsIntervalResponder() {}

func PatchBalloonStatsIntervalNotImplemented() PatchBalloonStatsIntervalResponder {
	return &PatchBalloonStatsIntervalNotImplementedResponder{
		middleware.NotImplemented(
			"operation authentication.PatchBalloonStatsInterval has not yet been implemented",
		),
	}
}

type PatchBalloonStatsIntervalResponder interface {
	middleware.Responder
	PatchBalloonStatsIntervalResponder()
}
