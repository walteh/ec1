// Code generated by go-swagger; DO NOT EDIT.

package operations

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"net/http"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/runtime/middleware"

	"github.com/walteh/ec1/gen/firecracker-swagger-go/models"
)

// PutGuestDriveByIDNoContentCode is the HTTP code returned for type PutGuestDriveByIDNoContent
const PutGuestDriveByIDNoContentCode int = 204

/*
PutGuestDriveByIDNoContent Drive created/updated

swagger:response putGuestDriveByIdNoContent
*/
type PutGuestDriveByIDNoContent struct {
}

// NewPutGuestDriveByIDNoContent creates PutGuestDriveByIDNoContent with default headers values
func NewPutGuestDriveByIDNoContent() *PutGuestDriveByIDNoContent {

	return &PutGuestDriveByIDNoContent{}
}

// WriteResponse to the client
func (o *PutGuestDriveByIDNoContent) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.Header().Del(runtime.HeaderContentType) //Remove Content-Type on empty responses

	rw.WriteHeader(204)
}

func (o *PutGuestDriveByIDNoContent) PutGuestDriveByIDResponder() {}

// PutGuestDriveByIDBadRequestCode is the HTTP code returned for type PutGuestDriveByIDBadRequest
const PutGuestDriveByIDBadRequestCode int = 400

/*
PutGuestDriveByIDBadRequest Drive cannot be created/updated due to bad input

swagger:response putGuestDriveByIdBadRequest
*/
type PutGuestDriveByIDBadRequest struct {

	/*
	  In: Body
	*/
	Payload *models.Error `json:"body,omitempty"`
}

// NewPutGuestDriveByIDBadRequest creates PutGuestDriveByIDBadRequest with default headers values
func NewPutGuestDriveByIDBadRequest() *PutGuestDriveByIDBadRequest {

	return &PutGuestDriveByIDBadRequest{}
}

// WithPayload adds the payload to the put guest drive by Id bad request response
func (o *PutGuestDriveByIDBadRequest) WithPayload(payload *models.Error) *PutGuestDriveByIDBadRequest {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the put guest drive by Id bad request response
func (o *PutGuestDriveByIDBadRequest) SetPayload(payload *models.Error) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *PutGuestDriveByIDBadRequest) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(400)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

func (o *PutGuestDriveByIDBadRequest) PutGuestDriveByIDResponder() {}

/*
PutGuestDriveByIDDefault Internal server error.

swagger:response putGuestDriveByIdDefault
*/
type PutGuestDriveByIDDefault struct {
	_statusCode int

	/*
	  In: Body
	*/
	Payload *models.Error `json:"body,omitempty"`
}

// NewPutGuestDriveByIDDefault creates PutGuestDriveByIDDefault with default headers values
func NewPutGuestDriveByIDDefault(code int) *PutGuestDriveByIDDefault {
	if code <= 0 {
		code = 500
	}

	return &PutGuestDriveByIDDefault{
		_statusCode: code,
	}
}

// WithStatusCode adds the status to the put guest drive by ID default response
func (o *PutGuestDriveByIDDefault) WithStatusCode(code int) *PutGuestDriveByIDDefault {
	o._statusCode = code
	return o
}

// SetStatusCode sets the status to the put guest drive by ID default response
func (o *PutGuestDriveByIDDefault) SetStatusCode(code int) {
	o._statusCode = code
}

// WithPayload adds the payload to the put guest drive by ID default response
func (o *PutGuestDriveByIDDefault) WithPayload(payload *models.Error) *PutGuestDriveByIDDefault {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the put guest drive by ID default response
func (o *PutGuestDriveByIDDefault) SetPayload(payload *models.Error) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *PutGuestDriveByIDDefault) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(o._statusCode)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

func (o *PutGuestDriveByIDDefault) PutGuestDriveByIDResponder() {}

type PutGuestDriveByIDNotImplementedResponder struct {
	middleware.Responder
}

func (*PutGuestDriveByIDNotImplementedResponder) PutGuestDriveByIDResponder() {}

func PutGuestDriveByIDNotImplemented() PutGuestDriveByIDResponder {
	return &PutGuestDriveByIDNotImplementedResponder{
		middleware.NotImplemented(
			"operation authentication.PutGuestDriveByID has not yet been implemented",
		),
	}
}

type PutGuestDriveByIDResponder interface {
	middleware.Responder
	PutGuestDriveByIDResponder()
}
