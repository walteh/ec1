// Code generated by go-swagger; DO NOT EDIT.

package operations

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"net/http"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/runtime/middleware"

	"github.com/walteh/ec1/gen/firecracker-swagger-go/models"
)

// CreateSnapshotNoContentCode is the HTTP code returned for type CreateSnapshotNoContent
const CreateSnapshotNoContentCode int = 204

/*
CreateSnapshotNoContent Snapshot created

swagger:response createSnapshotNoContent
*/
type CreateSnapshotNoContent struct {
}

// NewCreateSnapshotNoContent creates CreateSnapshotNoContent with default headers values
func NewCreateSnapshotNoContent() *CreateSnapshotNoContent {

	return &CreateSnapshotNoContent{}
}

// WriteResponse to the client
func (o *CreateSnapshotNoContent) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.Header().Del(runtime.HeaderContentType) //Remove Content-Type on empty responses

	rw.WriteHeader(204)
}

func (o *CreateSnapshotNoContent) CreateSnapshotResponder() {}

// CreateSnapshotBadRequestCode is the HTTP code returned for type CreateSnapshotBadRequest
const CreateSnapshotBadRequestCode int = 400

/*
CreateSnapshotBadRequest Snapshot cannot be created due to bad input

swagger:response createSnapshotBadRequest
*/
type CreateSnapshotBadRequest struct {

	/*
	  In: Body
	*/
	Payload *models.Error `json:"body,omitempty"`
}

// NewCreateSnapshotBadRequest creates CreateSnapshotBadRequest with default headers values
func NewCreateSnapshotBadRequest() *CreateSnapshotBadRequest {

	return &CreateSnapshotBadRequest{}
}

// WithPayload adds the payload to the create snapshot bad request response
func (o *CreateSnapshotBadRequest) WithPayload(payload *models.Error) *CreateSnapshotBadRequest {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the create snapshot bad request response
func (o *CreateSnapshotBadRequest) SetPayload(payload *models.Error) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *CreateSnapshotBadRequest) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(400)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

func (o *CreateSnapshotBadRequest) CreateSnapshotResponder() {}

/*
CreateSnapshotDefault Internal server error

swagger:response createSnapshotDefault
*/
type CreateSnapshotDefault struct {
	_statusCode int

	/*
	  In: Body
	*/
	Payload *models.Error `json:"body,omitempty"`
}

// NewCreateSnapshotDefault creates CreateSnapshotDefault with default headers values
func NewCreateSnapshotDefault(code int) *CreateSnapshotDefault {
	if code <= 0 {
		code = 500
	}

	return &CreateSnapshotDefault{
		_statusCode: code,
	}
}

// WithStatusCode adds the status to the create snapshot default response
func (o *CreateSnapshotDefault) WithStatusCode(code int) *CreateSnapshotDefault {
	o._statusCode = code
	return o
}

// SetStatusCode sets the status to the create snapshot default response
func (o *CreateSnapshotDefault) SetStatusCode(code int) {
	o._statusCode = code
}

// WithPayload adds the payload to the create snapshot default response
func (o *CreateSnapshotDefault) WithPayload(payload *models.Error) *CreateSnapshotDefault {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the create snapshot default response
func (o *CreateSnapshotDefault) SetPayload(payload *models.Error) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *CreateSnapshotDefault) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(o._statusCode)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

func (o *CreateSnapshotDefault) CreateSnapshotResponder() {}

type CreateSnapshotNotImplementedResponder struct {
	middleware.Responder
}

func (*CreateSnapshotNotImplementedResponder) CreateSnapshotResponder() {}

func CreateSnapshotNotImplemented() CreateSnapshotResponder {
	return &CreateSnapshotNotImplementedResponder{
		middleware.NotImplemented(
			"operation authentication.CreateSnapshot has not yet been implemented",
		),
	}
}

type CreateSnapshotResponder interface {
	middleware.Responder
	CreateSnapshotResponder()
}
