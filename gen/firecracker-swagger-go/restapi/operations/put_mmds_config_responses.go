// Code generated by go-swagger; DO NOT EDIT.

package operations

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"net/http"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/runtime/middleware"

	"github.com/walteh/ec1/gen/firecracker-swagger-go/models"
)

// PutMmdsConfigNoContentCode is the HTTP code returned for type PutMmdsConfigNoContent
const PutMmdsConfigNoContentCode int = 204

/*
PutMmdsConfigNoContent MMDS configuration was created/updated.

swagger:response putMmdsConfigNoContent
*/
type PutMmdsConfigNoContent struct {
}

// NewPutMmdsConfigNoContent creates PutMmdsConfigNoContent with default headers values
func NewPutMmdsConfigNoContent() *PutMmdsConfigNoContent {

	return &PutMmdsConfigNoContent{}
}

// WriteResponse to the client
func (o *PutMmdsConfigNoContent) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.Header().Del(runtime.HeaderContentType) //Remove Content-Type on empty responses

	rw.WriteHeader(204)
}

func (o *PutMmdsConfigNoContent) PutMmdsConfigResponder() {}

// PutMmdsConfigBadRequestCode is the HTTP code returned for type PutMmdsConfigBadRequest
const PutMmdsConfigBadRequestCode int = 400

/*
PutMmdsConfigBadRequest MMDS configuration cannot be updated due to bad input.

swagger:response putMmdsConfigBadRequest
*/
type PutMmdsConfigBadRequest struct {

	/*
	  In: Body
	*/
	Payload *models.Error `json:"body,omitempty"`
}

// NewPutMmdsConfigBadRequest creates PutMmdsConfigBadRequest with default headers values
func NewPutMmdsConfigBadRequest() *PutMmdsConfigBadRequest {

	return &PutMmdsConfigBadRequest{}
}

// WithPayload adds the payload to the put mmds config bad request response
func (o *PutMmdsConfigBadRequest) WithPayload(payload *models.Error) *PutMmdsConfigBadRequest {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the put mmds config bad request response
func (o *PutMmdsConfigBadRequest) SetPayload(payload *models.Error) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *PutMmdsConfigBadRequest) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(400)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

func (o *PutMmdsConfigBadRequest) PutMmdsConfigResponder() {}

/*
PutMmdsConfigDefault Internal server error

swagger:response putMmdsConfigDefault
*/
type PutMmdsConfigDefault struct {
	_statusCode int

	/*
	  In: Body
	*/
	Payload *models.Error `json:"body,omitempty"`
}

// NewPutMmdsConfigDefault creates PutMmdsConfigDefault with default headers values
func NewPutMmdsConfigDefault(code int) *PutMmdsConfigDefault {
	if code <= 0 {
		code = 500
	}

	return &PutMmdsConfigDefault{
		_statusCode: code,
	}
}

// WithStatusCode adds the status to the put mmds config default response
func (o *PutMmdsConfigDefault) WithStatusCode(code int) *PutMmdsConfigDefault {
	o._statusCode = code
	return o
}

// SetStatusCode sets the status to the put mmds config default response
func (o *PutMmdsConfigDefault) SetStatusCode(code int) {
	o._statusCode = code
}

// WithPayload adds the payload to the put mmds config default response
func (o *PutMmdsConfigDefault) WithPayload(payload *models.Error) *PutMmdsConfigDefault {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the put mmds config default response
func (o *PutMmdsConfigDefault) SetPayload(payload *models.Error) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *PutMmdsConfigDefault) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(o._statusCode)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

func (o *PutMmdsConfigDefault) PutMmdsConfigResponder() {}

type PutMmdsConfigNotImplementedResponder struct {
	middleware.Responder
}

func (*PutMmdsConfigNotImplementedResponder) PutMmdsConfigResponder() {}

func PutMmdsConfigNotImplemented() PutMmdsConfigResponder {
	return &PutMmdsConfigNotImplementedResponder{
		middleware.NotImplemented(
			"operation authentication.PutMmdsConfig has not yet been implemented",
		),
	}
}

type PutMmdsConfigResponder interface {
	middleware.Responder
	PutMmdsConfigResponder()
}
