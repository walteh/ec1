// Code generated by go-swagger; DO NOT EDIT.

package operations

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"net/http"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/runtime"
	"github.com/go-openapi/runtime/middleware"

	"github.com/walteh/ec1/gen/firecracker-swagger-go/models"
)

// NewPatchMmdsParams creates a new PatchMmdsParams object
//
// There are no default values defined in the spec.
func NewPatchMmdsParams() PatchMmdsParams {

	return PatchMmdsParams{}
}

// PatchMmdsParams contains all the bound params for the patch mmds operation
// typically these are obtained from a http.Request
//
// swagger:parameters patchMmds
type PatchMmdsParams struct {

	// HTTP Request Object
	HTTPRequest *http.Request `json:"-"`

	/*The MMDS data store patch JSON.
	  In: body
	*/
	Body models.MmdsContentsObject
}

// BindRequest both binds and validates a request, it assumes that complex things implement a Validatable(strfmt.Registry) error interface
// for simple values it will use straight method calls.
//
// To ensure default values, the struct must have been initialized with NewPatchMmdsParams() beforehand.
func (o *PatchMmdsParams) BindRequest(r *http.Request, route *middleware.MatchedRoute) error {
	var res []error

	o.HTTPRequest = r

	if runtime.HasBody(r) {
		defer r.Body.Close()
		var body models.MmdsContentsObject
		if err := route.Consumer.Consume(r.Body, &body); err != nil {
			res = append(res, errors.NewParseError("body", "body", "", err))
		} else {
			// no validation on generic interface
			o.Body = body
		}
	}
	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}
