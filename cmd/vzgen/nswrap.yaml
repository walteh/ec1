# nswrap.yaml for Apple Virtualization.framework
# This configuration generates Go bindings for the Apple Virtualization framework
package: hypervisor

inputfiles:
  - /Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/System/Library/Frameworks/Hypervisor.framework/Headers/Hypervisor.h
  - /Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/System/Library/Frameworks/Virtualization.framework/Headers/Virtualization.h
#   - /Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/System/Library/Frameworks/Foundation.framework/Headers/Foundation.h

# Classes to generate bindings for
classes:
  # HYPERVISOR (arm64 API is primarily C-based with OS_OBJECT opaque types, not Objective-C classes for core VM/vCPU)
  # Existing x86_64 style classes removed. OS_OBJECT types like hv_vm_config_t and hv_vcpu_config_t
  # will be handled via typesubs and their respective create functions.

  # VIRTUALIZATION
  # Core VM classes
  - VZVirtualMachine
  - VZVirtualMachineConfiguration
  - VZVirtualMachineStartOptions

  # Bootloaders
  - VZLinuxBootLoader
  - VZEFIBootLoader
  - VZMacOSBootLoader
  - VZMacAuxiliaryStorage

  # Storage
  - VZDiskImageStorageDeviceAttachment
  - VZVirtioBlockDeviceConfiguration
  - VZStorageDeviceConfiguration

  # Network
  - VZVirtioNetworkDeviceConfiguration
  - VZNetworkDeviceAttachment
  - VZNATNetworkDeviceAttachment
  - VZBridgedNetworkDeviceAttachment
  - VZFileHandleNetworkDeviceAttachment

  # Input/Output devices
  - VZVirtioConsoleDeviceSerialPortConfiguration
  - VZFileHandleSerialPortAttachment
  - VZFileSerialPortAttachment
  - VZVirtioEntropyDeviceConfiguration
  - VZSerialPortConfiguration
  - VZUSBKeyboardConfiguration
  - VZUSBMassStorageDeviceConfiguration

  # Memory
  - VZVirtioTraditionalMemoryBalloonDeviceConfiguration

  # Graphics
  - VZGraphicsDeviceConfiguration
  - VZMacGraphicsDeviceConfiguration
  - VZMacGraphicsDisplayConfiguration

  # Networking
  - VZMACAddress

  # Socket
  - VZVirtioSocketDevice
  - VZVirtioSocketDeviceConfiguration
  - VZVirtioSocketConnection
  - VZVirtioSocketListener

  # Shared Directory
  - VZSharedDirectory
  - VZDirectoryShare
  - VZSingleDirectoryShare
  - VZMultipleDirectoryShare
  - VZSharedDirectoryConfiguration
  - VZVirtioFileSystemDeviceConfiguration

  # USB
  - VZUSBConfiguration
  - VZUSBMassStorageDeviceConfiguration

  # Misc
  - NSAutoreleasePool
  - NSString
  - NSArray
  - NSDictionary
  - NSError

# Functions to expose
functions:
  # HYPERVISOR (arm64 C-Functions)
  # From hv_vm_allocate.h
  - hv_vm_allocate
  - hv_vm_deallocate
  # From hv_vm_config.h
  - hv_vm_config_create
  - hv_vm_config_get_max_ipa_size
  - hv_vm_config_get_default_ipa_size
  - hv_vm_config_set_ipa_size
  - hv_vm_config_get_ipa_size
  - hv_vm_config_get_el2_supported # macOS 15.0+
  - hv_vm_config_get_el2_enabled # macOS 15.0+
  - hv_vm_config_set_el2_enabled # macOS 15.0+
  # From hv_vm.h
  - hv_vm_get_max_vcpu_count
  - hv_vm_create
  - hv_vm_destroy
  - hv_vm_map
  - hv_vm_unmap
  - hv_vm_protect
  # From hv_vcpu_config.h
  - hv_vcpu_config_create
  - hv_vcpu_config_get_feature_reg
  - hv_vcpu_config_get_ccsidr_el1_sys_reg_values
  # From hv_vcpu.h
  - hv_vcpu_create
  - hv_vcpu_destroy
  - hv_vcpu_get_reg
  - hv_vcpu_set_reg
  - hv_vcpu_get_simd_fp_reg
  - hv_vcpu_set_simd_fp_reg
  - hv_vcpu_get_sme_state # macOS 15.2+
  - hv_vcpu_set_sme_state # macOS 15.2+
  - hv_vcpu_get_sme_z_reg # macOS 15.2+
  - hv_vcpu_set_sme_z_reg # macOS 15.2+
  - hv_vcpu_get_sme_p_reg # macOS 15.2+
  - hv_vcpu_set_sme_p_reg # macOS 15.2+
  - hv_vcpu_get_sme_za_reg # macOS 15.2+
  - hv_vcpu_set_sme_za_reg # macOS 15.2+
  - hv_vcpu_get_sme_zt0_reg # macOS 15.2+
  - hv_vcpu_set_sme_zt0_reg # macOS 15.2+
  - hv_vcpu_get_sys_reg
  - hv_vcpu_set_sys_reg
  - hv_vcpu_get_pending_interrupt
  - hv_vcpu_set_pending_interrupt
  - hv_vcpu_get_trap_debug_exceptions
  - hv_vcpu_set_trap_debug_exceptions
  - hv_vcpu_get_trap_debug_reg_accesses
  - hv_vcpu_set_trap_debug_reg_accesses
  - hv_vcpu_run
  - hv_vcpus_exit
  - hv_vcpu_get_exec_time
  - hv_vcpu_get_vtimer_mask
  - hv_vcpu_set_vtimer_mask
  - hv_vcpu_get_vtimer_offset
  - hv_vcpu_set_vtimer_offset
  # (GIC and further SME functions to be added after reading respective headers)

  # VIRTUALIZATION
  - VZVirtualMachine_.*
  - makeDispatchQueue
  - validateVZVirtualMachineConfiguration
  - minimumAllowedMemorySizeVZVirtualMachineConfiguration
  - maximumAllowedMemorySizeVZVirtualMachineConfiguration
  - minimumAllowedCPUCountVZVirtualMachineConfiguration
  - maximumAllowedCPUCountVZVirtualMachineConfiguration

# Enums
enums:
  - VZVirtualMachineState.*
  - VZErrorCode.*
  - VZLinuxRosettaAvailability.*
  - VZ.*
  # HYPERVISOR (arm64)
  - HVError.* # Common error codes like HV_SUCCESS (defined in hv_base.h, used by arm64)
  - HVAllocateFlags.* # For hv_vm_allocate flags (e.g. HV_ALLOCATE_DEFAULT)
  - HVMemoryFlags.* # For hv_vm_map flags (e.g. HV_MEMORY_READ)
  - HVExitReason.* # For hv_vcpu_exit_t reason (e.g. HV_EXIT_REASON_EXCEPTION)
  - HVReg.* # For ARM GPRs, PC, CPSR etc. (e.g. HV_REG_X0)
  - HVSimdFpReg.* # For ARM SIMD/FP registers (e.g. HV_SIMD_FP_REG_Q0)
  - HVFeatureReg.* # For ARM feature registers (e.g. HV_FEATURE_REG_ID_AA64DFR0_EL1)
  - HVSmeZReg.* # For ARM SME Z registers (e.g. HV_SME_Z_REG_0)
  - HVSmePReg.* # For ARM SME P registers (e.g. HV_SME_P_REG_0)
  # (More enums for hv_sys_reg_t, hv_interrupt_type_t, hv_cache_type_t, GIC, and SME to be added)
  - hv_sys_reg_t
  - hv_interrupt_type_t
  - hv_cache_type_t
  - hv_*

# Delegate implementations
# delegates:
#     VirtualMachineDelegateProxy:
#         VZVirtualMachineDelegate:
#           - guestDidStopVirtualMachine
#           - virtualMachine:didStopWithError
#           - virtualMachine:networkDevice:attachmentWasDisconnectedWithError

#     VirtioSocketListenerDelegateProxy:
#         VZVirtioSocketListenerDelegate:
#           - listener:shouldAcceptNewConnection:fromSocketDevice

# Frameworks to include
frameworks:
  - Foundation
  - Virtualization
#   - Hypervisor
#   - Cocoa

# Framework search dirs
# frameworkdirs:
#   - /Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/System/Library/Frameworks

# Import statements
# imports:
#   - fmt
#   - sync
#   - unsafe
#   - runtime/cgo

# System imports - replacing non-existent packages with standard Go packages
# sysimports:
#   - sync/atomic
# Type substitutions
typesubs:
    "VZBridgedNetworkInterface": "VZBridgedNetworkInterface"
    "^NSString[_ ]*\\*": "string"
    "^NSURL[_ ]*\\*": "string"
    "^void[_ ]*\\*": "unsafe.Pointer"
    "^const char[_ ]*\\*": "string"
    "^char[_ ]*\\*": "string"
    "^dispatch_queue_t": "unsafe.Pointer"
    "^unsigned int": "uint32"
    "^unsigned long long": "uint64"
    "^uint32_t": "uint32"
    "^uintptr_t": "uintptr"
    # HYPERVISOR (arm64)
    "^hv_vm_config_t": "unsafe.Pointer" # Opaque OS_OBJECT
    "^hv_vcpu_config_t": "unsafe.Pointer" # Opaque OS_OBJECT
    "^hv_ipa_t": "uint64"
    "^hv_memory_flags_t": "uint64" # Also an enum group HVMemoryFlags.*
    "^hv_vcpu_t": "uint64"
    "^hv_exception_syndrome_t": "uint64"
    "^hv_exception_address_t": "uint64"
    "^hv_sme_zt0_uchar64_t": "unsafe.Pointer"
    "^hv_sme_zt0_uchar64_t\\*": "unsafe.Pointer"
    "^hv_simd_fp_uchar16_t": "[]byte" # Needs verification if nswrap handles fixed vector types
    "\"^hv_vcpu_exit_t\\*\"": "unsafe.Pointer" # Pointer to struct, review if nswrap can generate Go struct
    "\"^hv_vcpu_sme_state_t\\*\"": "unsafe.Pointer" # Pointer to struct, review if nswrap can generate Go struct
    # "^API_AVAILABLE_.*": "unsafe.Pointer" # Handle API_AVAILABLE macros
    # "^OS_OBJECT_RETURNS_RETAINED_.*": "unsafe.Pointer" # Handle OS_OBJECT macros
    # # Specific problematic types
    # (More typesubs for GIC/SME structs and specific typedefs to be added)

# Compiler directives
pragma:
  - clang diagnostic ignored "-Wformat-security"
  - clang diagnostic ignored "-Wdeprecated-declarations"

# Setting for variadic argument functions
vaargs: 16

# Debug output for AST parsing
debugast: true

# Use ARC (Automatic Reference Counting) - false to match existing code
arc: false

# Use autoreleases
autorelease: true

# Disable garbage collection (to match existing code approach)
nogc: false
